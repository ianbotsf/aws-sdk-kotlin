// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Specifies JSON as request's output serialization format.
 */
class JsonOutput private constructor(builder: Builder) {
    /**
     * The value used to separate individual records in the output. If no value is specified,
     * Amazon S3 uses a newline character ('\n').
     */
    val recordDelimiter: kotlin.String? = builder.recordDelimiter

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.JsonOutput = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("JsonOutput(")
        append("recordDelimiter=$recordDelimiter)")
    }

    override fun hashCode(): kotlin.Int {
        var result = recordDelimiter?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as JsonOutput

        if (recordDelimiter != other.recordDelimiter) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.JsonOutput = Builder(this).apply(block).build()

    class Builder {
        /**
         * The value used to separate individual records in the output. If no value is specified,
         * Amazon S3 uses a newline character ('\n').
         */
        var recordDelimiter: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.JsonOutput) : this() {
            this.recordDelimiter = x.recordDelimiter
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.JsonOutput = JsonOutput(this)
    }
}
