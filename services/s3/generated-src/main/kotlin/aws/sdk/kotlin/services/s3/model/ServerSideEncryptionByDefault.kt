// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Describes the default server-side encryption to apply to new objects in the bucket. If a
 * PUT Object request doesn't specify any server-side encryption, this default encryption will
 * be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates
 * an Amazon Web Services KMS key in your Amazon Web Services account the first time that you add an object encrypted with
 * SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html">PUT Bucket encryption in
 * the Amazon S3 API Reference.
 */
class ServerSideEncryptionByDefault private constructor(builder: Builder) {
    /**
     * Amazon Web Services Key Management Service (KMS) customer Amazon Web Services KMS key ID to use for the default
     * encryption. This parameter is allowed if and only if SSEAlgorithm is set to
     * aws:kms.
     * You can specify the key ID or the Amazon Resource Name (ARN) of the KMS key. However, if
     * you are using encryption with cross-account or Amazon Web Services service operations you must use a fully qualified KMS
     * key ARN. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy">Using encryption for cross-account operations.
     *
     * For example:
     *
     *
     * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab
     *
     *
     * Key ARN:
     * arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
     *
     *
     *
     * Amazon S3 only supports symmetric KMS keys and not asymmetric KMS keys. For more information, see
     * <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and
     * asymmetric keys in the Amazon Web Services Key Management Service Developer Guide.
     */
    val kmsMasterKeyId: kotlin.String? = builder.kmsMasterKeyId
    /**
     * Server-side encryption algorithm to use for the default encryption.
     */
    val sseAlgorithm: aws.sdk.kotlin.services.s3.model.ServerSideEncryption? = builder.sseAlgorithm

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.ServerSideEncryptionByDefault = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ServerSideEncryptionByDefault(")
        append("kmsMasterKeyId=*** Sensitive Data Redacted ***,")
        append("sseAlgorithm=$sseAlgorithm)")
    }

    override fun hashCode(): kotlin.Int {
        var result = kmsMasterKeyId?.hashCode() ?: 0
        result = 31 * result + (sseAlgorithm?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ServerSideEncryptionByDefault

        if (kmsMasterKeyId != other.kmsMasterKeyId) return false
        if (sseAlgorithm != other.sseAlgorithm) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.ServerSideEncryptionByDefault = Builder(this).apply(block).build()

    class Builder {
        /**
         * Amazon Web Services Key Management Service (KMS) customer Amazon Web Services KMS key ID to use for the default
         * encryption. This parameter is allowed if and only if SSEAlgorithm is set to
         * aws:kms.
         * You can specify the key ID or the Amazon Resource Name (ARN) of the KMS key. However, if
         * you are using encryption with cross-account or Amazon Web Services service operations you must use a fully qualified KMS
         * key ARN. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy">Using encryption for cross-account operations.
         *
         * For example:
         *
         *
         * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab
         *
         *
         * Key ARN:
         * arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab
         *
         *
         *
         * Amazon S3 only supports symmetric KMS keys and not asymmetric KMS keys. For more information, see
         * <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Using symmetric and
         * asymmetric keys in the Amazon Web Services Key Management Service Developer Guide.
         */
        var kmsMasterKeyId: kotlin.String? = null
        /**
         * Server-side encryption algorithm to use for the default encryption.
         */
        var sseAlgorithm: aws.sdk.kotlin.services.s3.model.ServerSideEncryption? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.ServerSideEncryptionByDefault) : this() {
            this.kmsMasterKeyId = x.kmsMasterKeyId
            this.sseAlgorithm = x.sseAlgorithm
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.ServerSideEncryptionByDefault = ServerSideEncryptionByDefault(this)
    }
}
