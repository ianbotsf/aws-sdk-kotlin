// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Specifies when an object transitions to a specified storage class. For more information
 * about Amazon S3 lifecycle configuration rules, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html">Transitioning
 * Objects Using Amazon S3 Lifecycle in the Amazon S3 User Guide.
 */
class Transition private constructor(builder: Builder) {
    /**
     * Indicates when objects are transitioned to the specified storage class. The date value
     * must be in ISO 8601 format. The time is always midnight UTC.
     */
    val date: aws.smithy.kotlin.runtime.time.Instant? = builder.date
    /**
     * Indicates the number of days after creation when objects are transitioned to the
     * specified storage class. The value must be a positive integer.
     */
    val days: kotlin.Int = builder.days
    /**
     * The storage class to which you want the object to transition.
     */
    val storageClass: aws.sdk.kotlin.services.s3.model.TransitionStorageClass? = builder.storageClass

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.Transition = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("Transition(")
        append("date=$date,")
        append("days=$days,")
        append("storageClass=$storageClass)")
    }

    override fun hashCode(): kotlin.Int {
        var result = date?.hashCode() ?: 0
        result = 31 * result + (days)
        result = 31 * result + (storageClass?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as Transition

        if (date != other.date) return false
        if (days != other.days) return false
        if (storageClass != other.storageClass) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.Transition = Builder(this).apply(block).build()

    class Builder {
        /**
         * Indicates when objects are transitioned to the specified storage class. The date value
         * must be in ISO 8601 format. The time is always midnight UTC.
         */
        var date: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * Indicates the number of days after creation when objects are transitioned to the
         * specified storage class. The value must be a positive integer.
         */
        var days: kotlin.Int = 0
        /**
         * The storage class to which you want the object to transition.
         */
        var storageClass: aws.sdk.kotlin.services.s3.model.TransitionStorageClass? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.Transition) : this() {
            this.date = x.date
            this.days = x.days
            this.storageClass = x.storageClass
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.Transition = Transition(this)
    }
}
