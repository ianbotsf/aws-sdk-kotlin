// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



class CompleteMultipartUploadResponse private constructor(builder: Builder) {
    /**
     * The name of the bucket that contains the newly created object. Does not return the access point ARN or access point alias if used.
     * When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points in the Amazon S3 User Guide.
     * When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When using this action using S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using S3 on Outposts in the Amazon S3 User Guide.
     */
    val bucket: kotlin.String? = builder.bucket
    /**
     * Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).
     */
    val bucketKeyEnabled: kotlin.Boolean = builder.bucketKeyEnabled
    /**
     * Entity tag that identifies the newly created object's data. Objects with different
     * object data will have different entity tags. The entity tag is an opaque string. The entity
     * tag may or may not be an MD5 digest of the object data. If the entity tag is not an MD5
     * digest of the object data, it will contain one or more nonhexadecimal characters and/or
     * will consist of less than 32 or more than 32 hexadecimal digits.
     */
    val eTag: kotlin.String? = builder.eTag
    /**
     * If the object expiration is configured, this will contain the expiration date
     * (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.
     */
    val expiration: kotlin.String? = builder.expiration
    /**
     * The object key of the newly created object.
     */
    val key: kotlin.String? = builder.key
    /**
     * The URI that identifies the newly created object.
     */
    val location: kotlin.String? = builder.location
    /**
     * If present, indicates that the requester was successfully charged for the
     * request.
     */
    val requestCharged: aws.sdk.kotlin.services.s3.model.RequestCharged? = builder.requestCharged
    /**
     * If you specified server-side encryption either with an Amazon S3-managed encryption key or an
     * Amazon Web Services KMS key in your initiate multipart upload request, the response
     * includes this header. It confirms the encryption algorithm that Amazon S3 used to encrypt the
     * object.
     */
    val serverSideEncryption: aws.sdk.kotlin.services.s3.model.ServerSideEncryption? = builder.serverSideEncryption
    /**
     * If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
     * customer managed key that was used for the object.
     */
    val ssekmsKeyId: kotlin.String? = builder.ssekmsKeyId
    /**
     * Version ID of the newly created object, in case the bucket has versioning turned
     * on.
     */
    val versionId: kotlin.String? = builder.versionId

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.CompleteMultipartUploadResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CompleteMultipartUploadResponse(")
        append("bucket=$bucket,")
        append("bucketKeyEnabled=$bucketKeyEnabled,")
        append("eTag=$eTag,")
        append("expiration=$expiration,")
        append("key=$key,")
        append("location=$location,")
        append("requestCharged=$requestCharged,")
        append("serverSideEncryption=$serverSideEncryption,")
        append("ssekmsKeyId=*** Sensitive Data Redacted ***,")
        append("versionId=$versionId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucket?.hashCode() ?: 0
        result = 31 * result + (bucketKeyEnabled.hashCode())
        result = 31 * result + (eTag?.hashCode() ?: 0)
        result = 31 * result + (expiration?.hashCode() ?: 0)
        result = 31 * result + (key?.hashCode() ?: 0)
        result = 31 * result + (location?.hashCode() ?: 0)
        result = 31 * result + (requestCharged?.hashCode() ?: 0)
        result = 31 * result + (serverSideEncryption?.hashCode() ?: 0)
        result = 31 * result + (ssekmsKeyId?.hashCode() ?: 0)
        result = 31 * result + (versionId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CompleteMultipartUploadResponse

        if (bucket != other.bucket) return false
        if (bucketKeyEnabled != other.bucketKeyEnabled) return false
        if (eTag != other.eTag) return false
        if (expiration != other.expiration) return false
        if (key != other.key) return false
        if (location != other.location) return false
        if (requestCharged != other.requestCharged) return false
        if (serverSideEncryption != other.serverSideEncryption) return false
        if (ssekmsKeyId != other.ssekmsKeyId) return false
        if (versionId != other.versionId) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.CompleteMultipartUploadResponse = Builder(this).apply(block).build()

    class Builder {
        /**
         * The name of the bucket that contains the newly created object. Does not return the access point ARN or access point alias if used.
         * When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form AccessPointName-AccountId.s3-accesspoint.Region.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points in the Amazon S3 User Guide.
         * When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com. When using this action using S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using S3 on Outposts in the Amazon S3 User Guide.
         */
        var bucket: kotlin.String? = null
        /**
         * Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).
         */
        var bucketKeyEnabled: kotlin.Boolean = false
        /**
         * Entity tag that identifies the newly created object's data. Objects with different
         * object data will have different entity tags. The entity tag is an opaque string. The entity
         * tag may or may not be an MD5 digest of the object data. If the entity tag is not an MD5
         * digest of the object data, it will contain one or more nonhexadecimal characters and/or
         * will consist of less than 32 or more than 32 hexadecimal digits.
         */
        var eTag: kotlin.String? = null
        /**
         * If the object expiration is configured, this will contain the expiration date
         * (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.
         */
        var expiration: kotlin.String? = null
        /**
         * The object key of the newly created object.
         */
        var key: kotlin.String? = null
        /**
         * The URI that identifies the newly created object.
         */
        var location: kotlin.String? = null
        /**
         * If present, indicates that the requester was successfully charged for the
         * request.
         */
        var requestCharged: aws.sdk.kotlin.services.s3.model.RequestCharged? = null
        /**
         * If you specified server-side encryption either with an Amazon S3-managed encryption key or an
         * Amazon Web Services KMS key in your initiate multipart upload request, the response
         * includes this header. It confirms the encryption algorithm that Amazon S3 used to encrypt the
         * object.
         */
        var serverSideEncryption: aws.sdk.kotlin.services.s3.model.ServerSideEncryption? = null
        /**
         * If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric
         * customer managed key that was used for the object.
         */
        var ssekmsKeyId: kotlin.String? = null
        /**
         * Version ID of the newly created object, in case the bucket has versioning turned
         * on.
         */
        var versionId: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.CompleteMultipartUploadResponse) : this() {
            this.bucket = x.bucket
            this.bucketKeyEnabled = x.bucketKeyEnabled
            this.eTag = x.eTag
            this.expiration = x.expiration
            this.key = x.key
            this.location = x.location
            this.requestCharged = x.requestCharged
            this.serverSideEncryption = x.serverSideEncryption
            this.ssekmsKeyId = x.ssekmsKeyId
            this.versionId = x.versionId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.CompleteMultipartUploadResponse = CompleteMultipartUploadResponse(this)
    }
}
