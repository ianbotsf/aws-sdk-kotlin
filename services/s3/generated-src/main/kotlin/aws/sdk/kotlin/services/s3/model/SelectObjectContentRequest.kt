// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.s3.model



/**
 * Request to filter the contents of an Amazon S3 object based on a simple Structured Query
 * Language (SQL) statement. In the request, along with the SQL expression, you must specify a
 * data serialization format (JSON or CSV) of the object. Amazon S3 uses this to parse object data
 * into records. It returns only records that match the specified SQL expression. You must
 * also specify the data serialization format for the response. For more information, see
 * <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectSELECTContent.html">S3Select API Documentation.
 */
class SelectObjectContentRequest private constructor(builder: Builder) {
    /**
     * The S3 bucket.
     */
    val bucket: kotlin.String? = builder.bucket
    /**
     * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
     */
    val expectedBucketOwner: kotlin.String? = builder.expectedBucketOwner
    /**
     * The expression that is used to query the object.
     */
    val expression: kotlin.String? = builder.expression
    /**
     * The type of the provided expression (for example, SQL).
     */
    val expressionType: aws.sdk.kotlin.services.s3.model.ExpressionType? = builder.expressionType
    /**
     * Describes the format of the data in the object that is being queried.
     */
    val inputSerialization: aws.sdk.kotlin.services.s3.model.InputSerialization? = builder.inputSerialization
    /**
     * The object key.
     */
    val key: kotlin.String? = builder.key
    /**
     * Describes the format of the data that you want Amazon S3 to return in response.
     */
    val outputSerialization: aws.sdk.kotlin.services.s3.model.OutputSerialization? = builder.outputSerialization
    /**
     * Specifies if periodic request progress information should be enabled.
     */
    val requestProgress: aws.sdk.kotlin.services.s3.model.RequestProgress? = builder.requestProgress
    /**
     * Specifies the byte range of the object to get the records from. A record is processed
     * when its first byte is contained by the range. This parameter is optional, but when
     * specified, it must not be empty. See RFC 2616, Section 14.35.1 about how to specify the
     * start and end of the range.
     *
     * ScanRangemay be used in the following ways:
     *
     *
     *
     * <scanrange><start>50</start><end>100</end></scanrange>
     * - process only the records starting between the bytes 50 and 100 (inclusive, counting
     * from zero)
     *
     *
     * <scanrange><start>50</start></scanrange> -
     * process only the records starting after the byte 50
     *
     *
     * <scanrange><end>50</end></scanrange> -
     * process only the records within the last 50 bytes of the file.
     */
    val scanRange: aws.sdk.kotlin.services.s3.model.ScanRange? = builder.scanRange
    /**
     * The SSE Algorithm used to encrypt the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption (Using Customer-Provided Encryption Keys.
     */
    val sseCustomerAlgorithm: kotlin.String? = builder.sseCustomerAlgorithm
    /**
     * The SSE Customer Key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption
     * (Using Customer-Provided Encryption Keys.
     */
    val sseCustomerKey: kotlin.String? = builder.sseCustomerKey
    /**
     * The SSE Customer Key MD5. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption
     * (Using Customer-Provided Encryption Keys.
     */
    val sseCustomerKeyMd5: kotlin.String? = builder.sseCustomerKeyMd5

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.s3.model.SelectObjectContentRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("SelectObjectContentRequest(")
        append("bucket=$bucket,")
        append("expectedBucketOwner=$expectedBucketOwner,")
        append("expression=$expression,")
        append("expressionType=$expressionType,")
        append("inputSerialization=$inputSerialization,")
        append("key=$key,")
        append("outputSerialization=$outputSerialization,")
        append("requestProgress=$requestProgress,")
        append("scanRange=$scanRange,")
        append("sseCustomerAlgorithm=$sseCustomerAlgorithm,")
        append("sseCustomerKey=*** Sensitive Data Redacted ***,")
        append("sseCustomerKeyMd5=$sseCustomerKeyMd5)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucket?.hashCode() ?: 0
        result = 31 * result + (expectedBucketOwner?.hashCode() ?: 0)
        result = 31 * result + (expression?.hashCode() ?: 0)
        result = 31 * result + (expressionType?.hashCode() ?: 0)
        result = 31 * result + (inputSerialization?.hashCode() ?: 0)
        result = 31 * result + (key?.hashCode() ?: 0)
        result = 31 * result + (outputSerialization?.hashCode() ?: 0)
        result = 31 * result + (requestProgress?.hashCode() ?: 0)
        result = 31 * result + (scanRange?.hashCode() ?: 0)
        result = 31 * result + (sseCustomerAlgorithm?.hashCode() ?: 0)
        result = 31 * result + (sseCustomerKey?.hashCode() ?: 0)
        result = 31 * result + (sseCustomerKeyMd5?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as SelectObjectContentRequest

        if (bucket != other.bucket) return false
        if (expectedBucketOwner != other.expectedBucketOwner) return false
        if (expression != other.expression) return false
        if (expressionType != other.expressionType) return false
        if (inputSerialization != other.inputSerialization) return false
        if (key != other.key) return false
        if (outputSerialization != other.outputSerialization) return false
        if (requestProgress != other.requestProgress) return false
        if (scanRange != other.scanRange) return false
        if (sseCustomerAlgorithm != other.sseCustomerAlgorithm) return false
        if (sseCustomerKey != other.sseCustomerKey) return false
        if (sseCustomerKeyMd5 != other.sseCustomerKeyMd5) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.s3.model.SelectObjectContentRequest = Builder(this).apply(block).build()

    class Builder {
        /**
         * The S3 bucket.
         */
        var bucket: kotlin.String? = null
        /**
         * The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
         */
        var expectedBucketOwner: kotlin.String? = null
        /**
         * The expression that is used to query the object.
         */
        var expression: kotlin.String? = null
        /**
         * The type of the provided expression (for example, SQL).
         */
        var expressionType: aws.sdk.kotlin.services.s3.model.ExpressionType? = null
        /**
         * Describes the format of the data in the object that is being queried.
         */
        var inputSerialization: aws.sdk.kotlin.services.s3.model.InputSerialization? = null
        /**
         * The object key.
         */
        var key: kotlin.String? = null
        /**
         * Describes the format of the data that you want Amazon S3 to return in response.
         */
        var outputSerialization: aws.sdk.kotlin.services.s3.model.OutputSerialization? = null
        /**
         * Specifies if periodic request progress information should be enabled.
         */
        var requestProgress: aws.sdk.kotlin.services.s3.model.RequestProgress? = null
        /**
         * Specifies the byte range of the object to get the records from. A record is processed
         * when its first byte is contained by the range. This parameter is optional, but when
         * specified, it must not be empty. See RFC 2616, Section 14.35.1 about how to specify the
         * start and end of the range.
         *
         * ScanRangemay be used in the following ways:
         *
         *
         *
         * <scanrange><start>50</start><end>100</end></scanrange>
         * - process only the records starting between the bytes 50 and 100 (inclusive, counting
         * from zero)
         *
         *
         * <scanrange><start>50</start></scanrange> -
         * process only the records starting after the byte 50
         *
         *
         * <scanrange><end>50</end></scanrange> -
         * process only the records within the last 50 bytes of the file.
         */
        var scanRange: aws.sdk.kotlin.services.s3.model.ScanRange? = null
        /**
         * The SSE Algorithm used to encrypt the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption (Using Customer-Provided Encryption Keys.
         */
        var sseCustomerAlgorithm: kotlin.String? = null
        /**
         * The SSE Customer Key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption
         * (Using Customer-Provided Encryption Keys.
         */
        var sseCustomerKey: kotlin.String? = null
        /**
         * The SSE Customer Key MD5. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Server-Side Encryption
         * (Using Customer-Provided Encryption Keys.
         */
        var sseCustomerKeyMd5: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.s3.model.SelectObjectContentRequest) : this() {
            this.bucket = x.bucket
            this.expectedBucketOwner = x.expectedBucketOwner
            this.expression = x.expression
            this.expressionType = x.expressionType
            this.inputSerialization = x.inputSerialization
            this.key = x.key
            this.outputSerialization = x.outputSerialization
            this.requestProgress = x.requestProgress
            this.scanRange = x.scanRange
            this.sseCustomerAlgorithm = x.sseCustomerAlgorithm
            this.sseCustomerKey = x.sseCustomerKey
            this.sseCustomerKeyMd5 = x.sseCustomerKeyMd5
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.s3.model.SelectObjectContentRequest = SelectObjectContentRequest(this)

        /**
         * construct an [aws.sdk.kotlin.services.s3.model.InputSerialization] inside the given [block]
         */
        fun inputSerialization(block: aws.sdk.kotlin.services.s3.model.InputSerialization.Builder.() -> kotlin.Unit) {
            this.inputSerialization = aws.sdk.kotlin.services.s3.model.InputSerialization.invoke(block)
        }

        /**
         * construct an [aws.sdk.kotlin.services.s3.model.OutputSerialization] inside the given [block]
         */
        fun outputSerialization(block: aws.sdk.kotlin.services.s3.model.OutputSerialization.Builder.() -> kotlin.Unit) {
            this.outputSerialization = aws.sdk.kotlin.services.s3.model.OutputSerialization.invoke(block)
        }

        /**
         * construct an [aws.sdk.kotlin.services.s3.model.RequestProgress] inside the given [block]
         */
        fun requestProgress(block: aws.sdk.kotlin.services.s3.model.RequestProgress.Builder.() -> kotlin.Unit) {
            this.requestProgress = aws.sdk.kotlin.services.s3.model.RequestProgress.invoke(block)
        }

        /**
         * construct an [aws.sdk.kotlin.services.s3.model.ScanRange] inside the given [block]
         */
        fun scanRange(block: aws.sdk.kotlin.services.s3.model.ScanRange.Builder.() -> kotlin.Unit) {
            this.scanRange = aws.sdk.kotlin.services.s3.model.ScanRange.invoke(block)
        }
    }
}
