// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateVpcEndpointServiceConfigurationRequest private constructor(builder: Builder) {
    /**
     * Indicates whether requests from service consumers to create an endpoint to your service must
     * be accepted. To accept a request, use AcceptVpcEndpointConnections.
     */
    val acceptanceRequired: kotlin.Boolean? = builder.acceptanceRequired
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
     * For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure
     * idempotency.
     */
    val clientToken: kotlin.String? = builder.clientToken
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.
     */
    val gatewayLoadBalancerArns: List<String>? = builder.gatewayLoadBalancerArns
    /**
     * The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your
     * service.
     */
    val networkLoadBalancerArns: List<String>? = builder.networkLoadBalancerArns
    /**
     * (Interface endpoint configuration) The private DNS name to assign to the VPC endpoint service.
     */
    val privateDnsName: kotlin.String? = builder.privateDnsName
    /**
     * The tags to associate with the service.
     */
    val tagSpecifications: List<TagSpecification>? = builder.tagSpecifications

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateVpcEndpointServiceConfigurationRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateVpcEndpointServiceConfigurationRequest(")
        append("acceptanceRequired=$acceptanceRequired,")
        append("clientToken=$clientToken,")
        append("dryRun=$dryRun,")
        append("gatewayLoadBalancerArns=$gatewayLoadBalancerArns,")
        append("networkLoadBalancerArns=$networkLoadBalancerArns,")
        append("privateDnsName=$privateDnsName,")
        append("tagSpecifications=$tagSpecifications)")
    }

    override fun hashCode(): kotlin.Int {
        var result = acceptanceRequired?.hashCode() ?: 0
        result = 31 * result + (clientToken?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (gatewayLoadBalancerArns?.hashCode() ?: 0)
        result = 31 * result + (networkLoadBalancerArns?.hashCode() ?: 0)
        result = 31 * result + (privateDnsName?.hashCode() ?: 0)
        result = 31 * result + (tagSpecifications?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateVpcEndpointServiceConfigurationRequest

        if (acceptanceRequired != other.acceptanceRequired) return false
        if (clientToken != other.clientToken) return false
        if (dryRun != other.dryRun) return false
        if (gatewayLoadBalancerArns != other.gatewayLoadBalancerArns) return false
        if (networkLoadBalancerArns != other.networkLoadBalancerArns) return false
        if (privateDnsName != other.privateDnsName) return false
        if (tagSpecifications != other.tagSpecifications) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateVpcEndpointServiceConfigurationRequest = Builder(this).apply(block).build()

    class Builder {
        /**
         * Indicates whether requests from service consumers to create an endpoint to your service must
         * be accepted. To accept a request, use AcceptVpcEndpointConnections.
         */
        var acceptanceRequired: kotlin.Boolean? = null
        /**
         * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
         * For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure
         * idempotency.
         */
        var clientToken: kotlin.String? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: kotlin.Boolean? = null
        /**
         * The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.
         */
        var gatewayLoadBalancerArns: List<String>? = null
        /**
         * The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your
         * service.
         */
        var networkLoadBalancerArns: List<String>? = null
        /**
         * (Interface endpoint configuration) The private DNS name to assign to the VPC endpoint service.
         */
        var privateDnsName: kotlin.String? = null
        /**
         * The tags to associate with the service.
         */
        var tagSpecifications: List<TagSpecification>? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateVpcEndpointServiceConfigurationRequest) : this() {
            this.acceptanceRequired = x.acceptanceRequired
            this.clientToken = x.clientToken
            this.dryRun = x.dryRun
            this.gatewayLoadBalancerArns = x.gatewayLoadBalancerArns
            this.networkLoadBalancerArns = x.networkLoadBalancerArns
            this.privateDnsName = x.privateDnsName
            this.tagSpecifications = x.tagSpecifications
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateVpcEndpointServiceConfigurationRequest = CreateVpcEndpointServiceConfigurationRequest(this)
    }
}
