// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class GetHostReservationPurchasePreviewResponse private constructor(builder: Builder) {
    /**
     * The currency in which the totalUpfrontPrice and
     * totalHourlyPrice amounts are specified. At this time, the only
     * supported currency is USD.
     */
    val currencyCode: aws.sdk.kotlin.services.ec2.model.CurrencyCodeValues? = builder.currencyCode
    /**
     * The purchase information of the Dedicated Host reservation and the Dedicated Hosts
     * associated with it.
     */
    val purchase: List<Purchase>? = builder.purchase
    /**
     * The potential total hourly price of the reservation per hour.
     */
    val totalHourlyPrice: kotlin.String? = builder.totalHourlyPrice
    /**
     * The potential total upfront price. This is billed immediately.
     */
    val totalUpfrontPrice: kotlin.String? = builder.totalUpfrontPrice

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.GetHostReservationPurchasePreviewResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("GetHostReservationPurchasePreviewResponse(")
        append("currencyCode=$currencyCode,")
        append("purchase=$purchase,")
        append("totalHourlyPrice=$totalHourlyPrice,")
        append("totalUpfrontPrice=$totalUpfrontPrice)")
    }

    override fun hashCode(): kotlin.Int {
        var result = currencyCode?.hashCode() ?: 0
        result = 31 * result + (purchase?.hashCode() ?: 0)
        result = 31 * result + (totalHourlyPrice?.hashCode() ?: 0)
        result = 31 * result + (totalUpfrontPrice?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as GetHostReservationPurchasePreviewResponse

        if (currencyCode != other.currencyCode) return false
        if (purchase != other.purchase) return false
        if (totalHourlyPrice != other.totalHourlyPrice) return false
        if (totalUpfrontPrice != other.totalUpfrontPrice) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.GetHostReservationPurchasePreviewResponse = Builder(this).apply(block).build()

    class Builder {
        /**
         * The currency in which the totalUpfrontPrice and
         * totalHourlyPrice amounts are specified. At this time, the only
         * supported currency is USD.
         */
        var currencyCode: aws.sdk.kotlin.services.ec2.model.CurrencyCodeValues? = null
        /**
         * The purchase information of the Dedicated Host reservation and the Dedicated Hosts
         * associated with it.
         */
        var purchase: List<Purchase>? = null
        /**
         * The potential total hourly price of the reservation per hour.
         */
        var totalHourlyPrice: kotlin.String? = null
        /**
         * The potential total upfront price. This is billed immediately.
         */
        var totalUpfrontPrice: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.GetHostReservationPurchasePreviewResponse) : this() {
            this.currencyCode = x.currencyCode
            this.purchase = x.purchase
            this.totalHourlyPrice = x.totalHourlyPrice
            this.totalUpfrontPrice = x.totalUpfrontPrice
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.GetHostReservationPurchasePreviewResponse = GetHostReservationPurchasePreviewResponse(this)
    }
}
