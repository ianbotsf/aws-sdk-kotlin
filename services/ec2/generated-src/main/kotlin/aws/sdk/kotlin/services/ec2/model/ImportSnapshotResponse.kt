// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ImportSnapshotResponse private constructor(builder: Builder) {
    /**
     * A description of the import snapshot task.
     */
    val description: kotlin.String? = builder.description
    /**
     * The ID of the import snapshot task.
     */
    val importTaskId: kotlin.String? = builder.importTaskId
    /**
     * Information about the import snapshot task.
     */
    val snapshotTaskDetail: aws.sdk.kotlin.services.ec2.model.SnapshotTaskDetail? = builder.snapshotTaskDetail
    /**
     * Any tags assigned to the import snapshot task.
     */
    val tags: List<Tag>? = builder.tags

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ImportSnapshotResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ImportSnapshotResponse(")
        append("description=$description,")
        append("importTaskId=$importTaskId,")
        append("snapshotTaskDetail=$snapshotTaskDetail,")
        append("tags=$tags)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (importTaskId?.hashCode() ?: 0)
        result = 31 * result + (snapshotTaskDetail?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ImportSnapshotResponse

        if (description != other.description) return false
        if (importTaskId != other.importTaskId) return false
        if (snapshotTaskDetail != other.snapshotTaskDetail) return false
        if (tags != other.tags) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ImportSnapshotResponse = Builder(this).apply(block).build()

    class Builder {
        /**
         * A description of the import snapshot task.
         */
        var description: kotlin.String? = null
        /**
         * The ID of the import snapshot task.
         */
        var importTaskId: kotlin.String? = null
        /**
         * Information about the import snapshot task.
         */
        var snapshotTaskDetail: aws.sdk.kotlin.services.ec2.model.SnapshotTaskDetail? = null
        /**
         * Any tags assigned to the import snapshot task.
         */
        var tags: List<Tag>? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ImportSnapshotResponse) : this() {
            this.description = x.description
            this.importTaskId = x.importTaskId
            this.snapshotTaskDetail = x.snapshotTaskDetail
            this.tags = x.tags
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ImportSnapshotResponse = ImportSnapshotResponse(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.SnapshotTaskDetail] inside the given [block]
         */
        fun snapshotTaskDetail(block: aws.sdk.kotlin.services.ec2.model.SnapshotTaskDetail.Builder.() -> kotlin.Unit) {
            this.snapshotTaskDetail = aws.sdk.kotlin.services.ec2.model.SnapshotTaskDetail.invoke(block)
        }
    }
}
