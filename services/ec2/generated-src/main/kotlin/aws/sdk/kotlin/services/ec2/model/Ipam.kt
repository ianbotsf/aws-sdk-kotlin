// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across Amazon Web Services Regions and accounts throughout your Amazon Web Services Organization. For more information, see <a href="/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM? in the Amazon VPC IPAM User Guide.
 */
class Ipam private constructor(builder: Builder) {
    /**
     * The description for the IPAM.
     */
    val description: kotlin.String? = builder.description
    /**
     * The ARN of the IPAM.
     */
    val ipamArn: kotlin.String? = builder.ipamArn
    /**
     * The ID of the IPAM.
     */
    val ipamId: kotlin.String? = builder.ipamId
    /**
     * The Amazon Web Services Region of the IPAM.
     */
    val ipamRegion: kotlin.String? = builder.ipamRegion
    /**
     * The operating Regions for an IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only
     * discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.
     * For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM in the Amazon VPC IPAM User Guide.
     */
    val operatingRegions: List<IpamOperatingRegion>? = builder.operatingRegions
    /**
     * The Amazon Web Services account ID of the owner of the IPAM.
     */
    val ownerId: kotlin.String? = builder.ownerId
    /**
     * The ID of the IPAM's default private scope.
     */
    val privateDefaultScopeId: kotlin.String? = builder.privateDefaultScopeId
    /**
     * The ID of the IPAM's default public scope.
     */
    val publicDefaultScopeId: kotlin.String? = builder.publicDefaultScopeId
    /**
     * The number of scopes in the IPAM. The scope quota is 5. For more information on quotas, see <a href="/vpc/latest/ipam/quotas-ipam.html">Quotas in IPAM in the Amazon VPC IPAM User Guide.
     */
    val scopeCount: kotlin.Int? = builder.scopeCount
    /**
     * The state of the IPAM.
     */
    val state: aws.sdk.kotlin.services.ec2.model.IpamState? = builder.state
    /**
     * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
     * For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.
     */
    val tags: List<Tag>? = builder.tags

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.Ipam = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("Ipam(")
        append("description=$description,")
        append("ipamArn=$ipamArn,")
        append("ipamId=$ipamId,")
        append("ipamRegion=$ipamRegion,")
        append("operatingRegions=$operatingRegions,")
        append("ownerId=$ownerId,")
        append("privateDefaultScopeId=$privateDefaultScopeId,")
        append("publicDefaultScopeId=$publicDefaultScopeId,")
        append("scopeCount=$scopeCount,")
        append("state=$state,")
        append("tags=$tags)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (ipamArn?.hashCode() ?: 0)
        result = 31 * result + (ipamId?.hashCode() ?: 0)
        result = 31 * result + (ipamRegion?.hashCode() ?: 0)
        result = 31 * result + (operatingRegions?.hashCode() ?: 0)
        result = 31 * result + (ownerId?.hashCode() ?: 0)
        result = 31 * result + (privateDefaultScopeId?.hashCode() ?: 0)
        result = 31 * result + (publicDefaultScopeId?.hashCode() ?: 0)
        result = 31 * result + (scopeCount ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as Ipam

        if (description != other.description) return false
        if (ipamArn != other.ipamArn) return false
        if (ipamId != other.ipamId) return false
        if (ipamRegion != other.ipamRegion) return false
        if (operatingRegions != other.operatingRegions) return false
        if (ownerId != other.ownerId) return false
        if (privateDefaultScopeId != other.privateDefaultScopeId) return false
        if (publicDefaultScopeId != other.publicDefaultScopeId) return false
        if (scopeCount != other.scopeCount) return false
        if (state != other.state) return false
        if (tags != other.tags) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.Ipam = Builder(this).apply(block).build()

    class Builder {
        /**
         * The description for the IPAM.
         */
        var description: kotlin.String? = null
        /**
         * The ARN of the IPAM.
         */
        var ipamArn: kotlin.String? = null
        /**
         * The ID of the IPAM.
         */
        var ipamId: kotlin.String? = null
        /**
         * The Amazon Web Services Region of the IPAM.
         */
        var ipamRegion: kotlin.String? = null
        /**
         * The operating Regions for an IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only
         * discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.
         * For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM in the Amazon VPC IPAM User Guide.
         */
        var operatingRegions: List<IpamOperatingRegion>? = null
        /**
         * The Amazon Web Services account ID of the owner of the IPAM.
         */
        var ownerId: kotlin.String? = null
        /**
         * The ID of the IPAM's default private scope.
         */
        var privateDefaultScopeId: kotlin.String? = null
        /**
         * The ID of the IPAM's default public scope.
         */
        var publicDefaultScopeId: kotlin.String? = null
        /**
         * The number of scopes in the IPAM. The scope quota is 5. For more information on quotas, see <a href="/vpc/latest/ipam/quotas-ipam.html">Quotas in IPAM in the Amazon VPC IPAM User Guide.
         */
        var scopeCount: kotlin.Int? = null
        /**
         * The state of the IPAM.
         */
        var state: aws.sdk.kotlin.services.ec2.model.IpamState? = null
        /**
         * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
         * For example, to find all resources that have a tag with the key Owner and the value TeamA, specify tag:Owner for the filter name and TeamA for the filter value.
         */
        var tags: List<Tag>? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.Ipam) : this() {
            this.description = x.description
            this.ipamArn = x.ipamArn
            this.ipamId = x.ipamId
            this.ipamRegion = x.ipamRegion
            this.operatingRegions = x.operatingRegions
            this.ownerId = x.ownerId
            this.privateDefaultScopeId = x.privateDefaultScopeId
            this.publicDefaultScopeId = x.publicDefaultScopeId
            this.scopeCount = x.scopeCount
            this.state = x.state
            this.tags = x.tags
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.Ipam = Ipam(this)
    }
}
