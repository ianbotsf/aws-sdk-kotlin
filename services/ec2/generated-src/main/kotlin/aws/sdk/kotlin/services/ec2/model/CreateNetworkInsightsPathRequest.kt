// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateNetworkInsightsPathRequest private constructor(builder: Builder) {
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information,
     * see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency.
     */
    val clientToken: kotlin.String? = builder.clientToken
    /**
     * The Amazon Web Services resource that is the destination of the path.
     */
    val destination: kotlin.String? = builder.destination
    /**
     * The IP address of the Amazon Web Services resource that is the destination of the path.
     */
    val destinationIp: kotlin.String? = builder.destinationIp
    /**
     * The destination port.
     */
    val destinationPort: kotlin.Int? = builder.destinationPort
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The protocol.
     */
    val protocol: aws.sdk.kotlin.services.ec2.model.Protocol? = builder.protocol
    /**
     * The Amazon Web Services resource that is the source of the path.
     */
    val source: kotlin.String? = builder.source
    /**
     * The IP address of the Amazon Web Services resource that is the source of the path.
     */
    val sourceIp: kotlin.String? = builder.sourceIp
    /**
     * The tags to add to the path.
     */
    val tagSpecifications: List<TagSpecification>? = builder.tagSpecifications

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateNetworkInsightsPathRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateNetworkInsightsPathRequest(")
        append("clientToken=$clientToken,")
        append("destination=$destination,")
        append("destinationIp=$destinationIp,")
        append("destinationPort=$destinationPort,")
        append("dryRun=$dryRun,")
        append("protocol=$protocol,")
        append("source=$source,")
        append("sourceIp=$sourceIp,")
        append("tagSpecifications=$tagSpecifications)")
    }

    override fun hashCode(): kotlin.Int {
        var result = clientToken?.hashCode() ?: 0
        result = 31 * result + (destination?.hashCode() ?: 0)
        result = 31 * result + (destinationIp?.hashCode() ?: 0)
        result = 31 * result + (destinationPort ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        result = 31 * result + (protocol?.hashCode() ?: 0)
        result = 31 * result + (source?.hashCode() ?: 0)
        result = 31 * result + (sourceIp?.hashCode() ?: 0)
        result = 31 * result + (tagSpecifications?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateNetworkInsightsPathRequest

        if (clientToken != other.clientToken) return false
        if (destination != other.destination) return false
        if (destinationIp != other.destinationIp) return false
        if (destinationPort != other.destinationPort) return false
        if (dryRun != other.dryRun) return false
        if (protocol != other.protocol) return false
        if (source != other.source) return false
        if (sourceIp != other.sourceIp) return false
        if (tagSpecifications != other.tagSpecifications) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateNetworkInsightsPathRequest = Builder(this).apply(block).build()

    class Builder {
        /**
         * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information,
         * see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency.
         */
        var clientToken: kotlin.String? = null
        /**
         * The Amazon Web Services resource that is the destination of the path.
         */
        var destination: kotlin.String? = null
        /**
         * The IP address of the Amazon Web Services resource that is the destination of the path.
         */
        var destinationIp: kotlin.String? = null
        /**
         * The destination port.
         */
        var destinationPort: kotlin.Int? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: kotlin.Boolean? = null
        /**
         * The protocol.
         */
        var protocol: aws.sdk.kotlin.services.ec2.model.Protocol? = null
        /**
         * The Amazon Web Services resource that is the source of the path.
         */
        var source: kotlin.String? = null
        /**
         * The IP address of the Amazon Web Services resource that is the source of the path.
         */
        var sourceIp: kotlin.String? = null
        /**
         * The tags to add to the path.
         */
        var tagSpecifications: List<TagSpecification>? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateNetworkInsightsPathRequest) : this() {
            this.clientToken = x.clientToken
            this.destination = x.destination
            this.destinationIp = x.destinationIp
            this.destinationPort = x.destinationPort
            this.dryRun = x.dryRun
            this.protocol = x.protocol
            this.source = x.source
            this.sourceIp = x.sourceIp
            this.tagSpecifications = x.tagSpecifications
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateNetworkInsightsPathRequest = CreateNetworkInsightsPathRequest(this)
    }
}
