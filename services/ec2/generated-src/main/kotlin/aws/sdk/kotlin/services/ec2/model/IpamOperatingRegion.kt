// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The operating Regions for an IPAM. Operating Regions are Amazon Web Services Regions where the IPAM is allowed to manage IP address CIDRs. IPAM only
 * discovers and monitors resources in the Amazon Web Services Regions you select as operating Regions.
 * For more information about operating Regions, see <a href="/vpc/latest/ipam/create-ipam.html">Create an IPAM in the Amazon VPC IPAM User Guide.
 */
class IpamOperatingRegion private constructor(builder: Builder) {
    /**
     * The name of the operating Region.
     */
    val regionName: kotlin.String? = builder.regionName

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.IpamOperatingRegion = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("IpamOperatingRegion(")
        append("regionName=$regionName)")
    }

    override fun hashCode(): kotlin.Int {
        var result = regionName?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as IpamOperatingRegion

        if (regionName != other.regionName) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.IpamOperatingRegion = Builder(this).apply(block).build()

    class Builder {
        /**
         * The name of the operating Region.
         */
        var regionName: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.IpamOperatingRegion) : this() {
            this.regionName = x.regionName
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.IpamOperatingRegion = IpamOperatingRegion(this)
    }
}
