// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes a launch template version.
 */
class LaunchTemplateVersion private constructor(builder: Builder) {
    /**
     * The time the version was created.
     */
    val createTime: aws.smithy.kotlin.runtime.time.Instant? = builder.createTime
    /**
     * The principal that created the version.
     */
    val createdBy: kotlin.String? = builder.createdBy
    /**
     * Indicates whether the version is the default version.
     */
    val defaultVersion: kotlin.Boolean? = builder.defaultVersion
    /**
     * Information about the launch template.
     */
    val launchTemplateData: aws.sdk.kotlin.services.ec2.model.ResponseLaunchTemplateData? = builder.launchTemplateData
    /**
     * The ID of the launch template.
     */
    val launchTemplateId: kotlin.String? = builder.launchTemplateId
    /**
     * The name of the launch template.
     */
    val launchTemplateName: kotlin.String? = builder.launchTemplateName
    /**
     * The description for the version.
     */
    val versionDescription: kotlin.String? = builder.versionDescription
    /**
     * The version number.
     */
    val versionNumber: kotlin.Long? = builder.versionNumber

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.LaunchTemplateVersion = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("LaunchTemplateVersion(")
        append("createTime=$createTime,")
        append("createdBy=$createdBy,")
        append("defaultVersion=$defaultVersion,")
        append("launchTemplateData=$launchTemplateData,")
        append("launchTemplateId=$launchTemplateId,")
        append("launchTemplateName=$launchTemplateName,")
        append("versionDescription=$versionDescription,")
        append("versionNumber=$versionNumber)")
    }

    override fun hashCode(): kotlin.Int {
        var result = createTime?.hashCode() ?: 0
        result = 31 * result + (createdBy?.hashCode() ?: 0)
        result = 31 * result + (defaultVersion?.hashCode() ?: 0)
        result = 31 * result + (launchTemplateData?.hashCode() ?: 0)
        result = 31 * result + (launchTemplateId?.hashCode() ?: 0)
        result = 31 * result + (launchTemplateName?.hashCode() ?: 0)
        result = 31 * result + (versionDescription?.hashCode() ?: 0)
        result = 31 * result + (versionNumber?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as LaunchTemplateVersion

        if (createTime != other.createTime) return false
        if (createdBy != other.createdBy) return false
        if (defaultVersion != other.defaultVersion) return false
        if (launchTemplateData != other.launchTemplateData) return false
        if (launchTemplateId != other.launchTemplateId) return false
        if (launchTemplateName != other.launchTemplateName) return false
        if (versionDescription != other.versionDescription) return false
        if (versionNumber != other.versionNumber) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.LaunchTemplateVersion = Builder(this).apply(block).build()

    class Builder {
        /**
         * The time the version was created.
         */
        var createTime: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The principal that created the version.
         */
        var createdBy: kotlin.String? = null
        /**
         * Indicates whether the version is the default version.
         */
        var defaultVersion: kotlin.Boolean? = null
        /**
         * Information about the launch template.
         */
        var launchTemplateData: aws.sdk.kotlin.services.ec2.model.ResponseLaunchTemplateData? = null
        /**
         * The ID of the launch template.
         */
        var launchTemplateId: kotlin.String? = null
        /**
         * The name of the launch template.
         */
        var launchTemplateName: kotlin.String? = null
        /**
         * The description for the version.
         */
        var versionDescription: kotlin.String? = null
        /**
         * The version number.
         */
        var versionNumber: kotlin.Long? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.LaunchTemplateVersion) : this() {
            this.createTime = x.createTime
            this.createdBy = x.createdBy
            this.defaultVersion = x.defaultVersion
            this.launchTemplateData = x.launchTemplateData
            this.launchTemplateId = x.launchTemplateId
            this.launchTemplateName = x.launchTemplateName
            this.versionDescription = x.versionDescription
            this.versionNumber = x.versionNumber
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.LaunchTemplateVersion = LaunchTemplateVersion(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.ResponseLaunchTemplateData] inside the given [block]
         */
        fun launchTemplateData(block: aws.sdk.kotlin.services.ec2.model.ResponseLaunchTemplateData.Builder.() -> kotlin.Unit) {
            this.launchTemplateData = aws.sdk.kotlin.services.ec2.model.ResponseLaunchTemplateData.invoke(block)
        }
    }
}
