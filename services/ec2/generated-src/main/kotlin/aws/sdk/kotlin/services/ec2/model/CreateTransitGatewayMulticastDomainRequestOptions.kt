// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * The options for the transit gateway multicast domain.
 */
class CreateTransitGatewayMulticastDomainRequestOptions private constructor(builder: Builder) {
    /**
     * Indicates whether to automatically accept cross-account subnet associations that are associated with the transit gateway multicast domain.
     */
    val autoAcceptSharedAssociations: aws.sdk.kotlin.services.ec2.model.AutoAcceptSharedAssociationsValue? = builder.autoAcceptSharedAssociations
    /**
     * Specify whether to enable Internet Group Management Protocol (IGMP) version 2 for the transit gateway multicast domain.
     */
    val igmpv2Support: aws.sdk.kotlin.services.ec2.model.Igmpv2SupportValue? = builder.igmpv2Support
    /**
     * Specify whether to enable support for statically configuring multicast group sources for a domain.
     */
    val staticSourcesSupport: aws.sdk.kotlin.services.ec2.model.StaticSourcesSupportValue? = builder.staticSourcesSupport

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateTransitGatewayMulticastDomainRequestOptions = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateTransitGatewayMulticastDomainRequestOptions(")
        append("autoAcceptSharedAssociations=$autoAcceptSharedAssociations,")
        append("igmpv2Support=$igmpv2Support,")
        append("staticSourcesSupport=$staticSourcesSupport)")
    }

    override fun hashCode(): kotlin.Int {
        var result = autoAcceptSharedAssociations?.hashCode() ?: 0
        result = 31 * result + (igmpv2Support?.hashCode() ?: 0)
        result = 31 * result + (staticSourcesSupport?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateTransitGatewayMulticastDomainRequestOptions

        if (autoAcceptSharedAssociations != other.autoAcceptSharedAssociations) return false
        if (igmpv2Support != other.igmpv2Support) return false
        if (staticSourcesSupport != other.staticSourcesSupport) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateTransitGatewayMulticastDomainRequestOptions = Builder(this).apply(block).build()

    class Builder {
        /**
         * Indicates whether to automatically accept cross-account subnet associations that are associated with the transit gateway multicast domain.
         */
        var autoAcceptSharedAssociations: aws.sdk.kotlin.services.ec2.model.AutoAcceptSharedAssociationsValue? = null
        /**
         * Specify whether to enable Internet Group Management Protocol (IGMP) version 2 for the transit gateway multicast domain.
         */
        var igmpv2Support: aws.sdk.kotlin.services.ec2.model.Igmpv2SupportValue? = null
        /**
         * Specify whether to enable support for statically configuring multicast group sources for a domain.
         */
        var staticSourcesSupport: aws.sdk.kotlin.services.ec2.model.StaticSourcesSupportValue? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateTransitGatewayMulticastDomainRequestOptions) : this() {
            this.autoAcceptSharedAssociations = x.autoAcceptSharedAssociations
            this.igmpv2Support = x.igmpv2Support
            this.staticSourcesSupport = x.staticSourcesSupport
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateTransitGatewayMulticastDomainRequestOptions = CreateTransitGatewayMulticastDomainRequestOptions(this)
    }
}
