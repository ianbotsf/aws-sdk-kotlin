// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the association between an instance and an Elastic Graphics accelerator.
 */
class ElasticGpuAssociation private constructor(builder: Builder) {
    /**
     * The ID of the association.
     */
    val elasticGpuAssociationId: kotlin.String? = builder.elasticGpuAssociationId
    /**
     * The state of the association between the instance and the
     * Elastic Graphics accelerator.
     */
    val elasticGpuAssociationState: kotlin.String? = builder.elasticGpuAssociationState
    /**
     * The time the Elastic Graphics accelerator was associated with the instance.
     */
    val elasticGpuAssociationTime: kotlin.String? = builder.elasticGpuAssociationTime
    /**
     * The ID of the Elastic Graphics accelerator.
     */
    val elasticGpuId: kotlin.String? = builder.elasticGpuId

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ElasticGpuAssociation = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ElasticGpuAssociation(")
        append("elasticGpuAssociationId=$elasticGpuAssociationId,")
        append("elasticGpuAssociationState=$elasticGpuAssociationState,")
        append("elasticGpuAssociationTime=$elasticGpuAssociationTime,")
        append("elasticGpuId=$elasticGpuId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = elasticGpuAssociationId?.hashCode() ?: 0
        result = 31 * result + (elasticGpuAssociationState?.hashCode() ?: 0)
        result = 31 * result + (elasticGpuAssociationTime?.hashCode() ?: 0)
        result = 31 * result + (elasticGpuId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ElasticGpuAssociation

        if (elasticGpuAssociationId != other.elasticGpuAssociationId) return false
        if (elasticGpuAssociationState != other.elasticGpuAssociationState) return false
        if (elasticGpuAssociationTime != other.elasticGpuAssociationTime) return false
        if (elasticGpuId != other.elasticGpuId) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ElasticGpuAssociation = Builder(this).apply(block).build()

    class Builder {
        /**
         * The ID of the association.
         */
        var elasticGpuAssociationId: kotlin.String? = null
        /**
         * The state of the association between the instance and the
         * Elastic Graphics accelerator.
         */
        var elasticGpuAssociationState: kotlin.String? = null
        /**
         * The time the Elastic Graphics accelerator was associated with the instance.
         */
        var elasticGpuAssociationTime: kotlin.String? = null
        /**
         * The ID of the Elastic Graphics accelerator.
         */
        var elasticGpuId: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ElasticGpuAssociation) : this() {
            this.elasticGpuAssociationId = x.elasticGpuAssociationId
            this.elasticGpuAssociationState = x.elasticGpuAssociationState
            this.elasticGpuAssociationTime = x.elasticGpuAssociationTime
            this.elasticGpuId = x.elasticGpuId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ElasticGpuAssociation = ElasticGpuAssociation(this)
    }
}
