// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import kotlin.collections.List

sealed class NetworkInterfaceType {

    abstract val value: kotlin.String

    object ApiGatewayManaged : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "api_gateway_managed"
        override fun toString(): kotlin.String = value
    }

    object AwsCodestarConnectionsManaged : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "aws_codestar_connections_managed"
        override fun toString(): kotlin.String = value
    }

    object Branch : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "branch"
        override fun toString(): kotlin.String = value
    }

    object Efa : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "efa"
        override fun toString(): kotlin.String = value
    }

    object GatewayLoadBalancer : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "gateway_load_balancer"
        override fun toString(): kotlin.String = value
    }

    object GatewayLoadBalancerEndpoint : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "gateway_load_balancer_endpoint"
        override fun toString(): kotlin.String = value
    }

    object GlobalAcceleratorManaged : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "global_accelerator_managed"
        override fun toString(): kotlin.String = value
    }

    object Interface : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "interface"
        override fun toString(): kotlin.String = value
    }

    object IotRulesManaged : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "iot_rules_managed"
        override fun toString(): kotlin.String = value
    }

    object Lambda : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "lambda"
        override fun toString(): kotlin.String = value
    }

    object LoadBalancer : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "load_balancer"
        override fun toString(): kotlin.String = value
    }

    object NatGateway : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "natGateway"
        override fun toString(): kotlin.String = value
    }

    object NetworkLoadBalancer : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "network_load_balancer"
        override fun toString(): kotlin.String = value
    }

    object Quicksight : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "quicksight"
        override fun toString(): kotlin.String = value
    }

    object TransitGateway : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "transit_gateway"
        override fun toString(): kotlin.String = value
    }

    object Trunk : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "trunk"
        override fun toString(): kotlin.String = value
    }

    object VpcEndpoint : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override val value: kotlin.String = "vpc_endpoint"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType = when(str) {
            "api_gateway_managed" -> ApiGatewayManaged
            "aws_codestar_connections_managed" -> AwsCodestarConnectionsManaged
            "branch" -> Branch
            "efa" -> Efa
            "gateway_load_balancer" -> GatewayLoadBalancer
            "gateway_load_balancer_endpoint" -> GatewayLoadBalancerEndpoint
            "global_accelerator_managed" -> GlobalAcceleratorManaged
            "interface" -> Interface
            "iot_rules_managed" -> IotRulesManaged
            "lambda" -> Lambda
            "load_balancer" -> LoadBalancer
            "natGateway" -> NatGateway
            "network_load_balancer" -> NetworkLoadBalancer
            "quicksight" -> Quicksight
            "transit_gateway" -> TransitGateway
            "trunk" -> Trunk
            "vpc_endpoint" -> VpcEndpoint
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<aws.sdk.kotlin.services.ec2.model.NetworkInterfaceType> = listOf(
            ApiGatewayManaged,
            AwsCodestarConnectionsManaged,
            Branch,
            Efa,
            GatewayLoadBalancer,
            GatewayLoadBalancerEndpoint,
            GlobalAcceleratorManaged,
            Interface,
            IotRulesManaged,
            Lambda,
            LoadBalancer,
            NatGateway,
            NetworkLoadBalancer,
            Quicksight,
            TransitGateway,
            Trunk,
            VpcEndpoint
        )
    }
}
