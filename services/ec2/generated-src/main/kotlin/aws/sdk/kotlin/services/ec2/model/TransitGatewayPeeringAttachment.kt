// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes the transit gateway peering attachment.
 */
class TransitGatewayPeeringAttachment private constructor(builder: Builder) {
    /**
     * Information about the accepter transit gateway.
     */
    val accepterTgwInfo: aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo? = builder.accepterTgwInfo
    /**
     * The time the transit gateway peering attachment was created.
     */
    val creationTime: aws.smithy.kotlin.runtime.time.Instant? = builder.creationTime
    /**
     * Information about the requester transit gateway.
     */
    val requesterTgwInfo: aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo? = builder.requesterTgwInfo
    /**
     * The state of the transit gateway peering attachment. Note that the initiating state has been deprecated.
     */
    val state: aws.sdk.kotlin.services.ec2.model.TransitGatewayAttachmentState? = builder.state
    /**
     * The status of the transit gateway peering attachment.
     */
    val status: aws.sdk.kotlin.services.ec2.model.PeeringAttachmentStatus? = builder.status
    /**
     * The tags for the transit gateway peering attachment.
     */
    val tags: List<Tag>? = builder.tags
    /**
     * The ID of the transit gateway peering attachment.
     */
    val transitGatewayAttachmentId: kotlin.String? = builder.transitGatewayAttachmentId

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.TransitGatewayPeeringAttachment = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("TransitGatewayPeeringAttachment(")
        append("accepterTgwInfo=$accepterTgwInfo,")
        append("creationTime=$creationTime,")
        append("requesterTgwInfo=$requesterTgwInfo,")
        append("state=$state,")
        append("status=$status,")
        append("tags=$tags,")
        append("transitGatewayAttachmentId=$transitGatewayAttachmentId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = accepterTgwInfo?.hashCode() ?: 0
        result = 31 * result + (creationTime?.hashCode() ?: 0)
        result = 31 * result + (requesterTgwInfo?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (status?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayAttachmentId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as TransitGatewayPeeringAttachment

        if (accepterTgwInfo != other.accepterTgwInfo) return false
        if (creationTime != other.creationTime) return false
        if (requesterTgwInfo != other.requesterTgwInfo) return false
        if (state != other.state) return false
        if (status != other.status) return false
        if (tags != other.tags) return false
        if (transitGatewayAttachmentId != other.transitGatewayAttachmentId) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.TransitGatewayPeeringAttachment = Builder(this).apply(block).build()

    class Builder {
        /**
         * Information about the accepter transit gateway.
         */
        var accepterTgwInfo: aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo? = null
        /**
         * The time the transit gateway peering attachment was created.
         */
        var creationTime: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * Information about the requester transit gateway.
         */
        var requesterTgwInfo: aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo? = null
        /**
         * The state of the transit gateway peering attachment. Note that the initiating state has been deprecated.
         */
        var state: aws.sdk.kotlin.services.ec2.model.TransitGatewayAttachmentState? = null
        /**
         * The status of the transit gateway peering attachment.
         */
        var status: aws.sdk.kotlin.services.ec2.model.PeeringAttachmentStatus? = null
        /**
         * The tags for the transit gateway peering attachment.
         */
        var tags: List<Tag>? = null
        /**
         * The ID of the transit gateway peering attachment.
         */
        var transitGatewayAttachmentId: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.TransitGatewayPeeringAttachment) : this() {
            this.accepterTgwInfo = x.accepterTgwInfo
            this.creationTime = x.creationTime
            this.requesterTgwInfo = x.requesterTgwInfo
            this.state = x.state
            this.status = x.status
            this.tags = x.tags
            this.transitGatewayAttachmentId = x.transitGatewayAttachmentId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.TransitGatewayPeeringAttachment = TransitGatewayPeeringAttachment(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo] inside the given [block]
         */
        fun accepterTgwInfo(block: aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo.Builder.() -> kotlin.Unit) {
            this.accepterTgwInfo = aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo.invoke(block)
        }

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo] inside the given [block]
         */
        fun requesterTgwInfo(block: aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo.Builder.() -> kotlin.Unit) {
            this.requesterTgwInfo = aws.sdk.kotlin.services.ec2.model.PeeringTgwInfo.invoke(block)
        }

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.PeeringAttachmentStatus] inside the given [block]
         */
        fun status(block: aws.sdk.kotlin.services.ec2.model.PeeringAttachmentStatus.Builder.() -> kotlin.Unit) {
            this.status = aws.sdk.kotlin.services.ec2.model.PeeringAttachmentStatus.invoke(block)
        }
    }
}
