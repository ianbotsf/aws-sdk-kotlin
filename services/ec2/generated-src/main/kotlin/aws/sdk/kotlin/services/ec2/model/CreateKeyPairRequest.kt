// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateKeyPairRequest private constructor(builder: Builder) {
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * A unique name for the key pair.
     * Constraints: Up to 255 ASCII characters
     */
    val keyName: kotlin.String? = builder.keyName
    /**
     * The type of key pair. Note that ED25519 keys are not supported for Windows instances, EC2 Instance Connect, and EC2 Serial Console.
     * Default: rsa
     */
    val keyType: aws.sdk.kotlin.services.ec2.model.KeyType? = builder.keyType
    /**
     * The tags to apply to the new key pair.
     */
    val tagSpecifications: List<TagSpecification>? = builder.tagSpecifications

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateKeyPairRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateKeyPairRequest(")
        append("dryRun=$dryRun,")
        append("keyName=$keyName,")
        append("keyType=$keyType,")
        append("tagSpecifications=$tagSpecifications)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dryRun?.hashCode() ?: 0
        result = 31 * result + (keyName?.hashCode() ?: 0)
        result = 31 * result + (keyType?.hashCode() ?: 0)
        result = 31 * result + (tagSpecifications?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateKeyPairRequest

        if (dryRun != other.dryRun) return false
        if (keyName != other.keyName) return false
        if (keyType != other.keyType) return false
        if (tagSpecifications != other.tagSpecifications) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateKeyPairRequest = Builder(this).apply(block).build()

    class Builder {
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: kotlin.Boolean? = null
        /**
         * A unique name for the key pair.
         * Constraints: Up to 255 ASCII characters
         */
        var keyName: kotlin.String? = null
        /**
         * The type of key pair. Note that ED25519 keys are not supported for Windows instances, EC2 Instance Connect, and EC2 Serial Console.
         * Default: rsa
         */
        var keyType: aws.sdk.kotlin.services.ec2.model.KeyType? = null
        /**
         * The tags to apply to the new key pair.
         */
        var tagSpecifications: List<TagSpecification>? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateKeyPairRequest) : this() {
            this.dryRun = x.dryRun
            this.keyName = x.keyName
            this.keyType = x.keyType
            this.tagSpecifications = x.tagSpecifications
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateKeyPairRequest = CreateKeyPairRequest(this)
    }
}
