// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Information about the associated IAM roles.
 */
class AssociatedRole private constructor(builder: Builder) {
    /**
     * The ARN of the associated IAM role.
     */
    val associatedRoleArn: kotlin.String? = builder.associatedRoleArn
    /**
     * The name of the Amazon S3 bucket in which the Amazon S3 object is stored.
     */
    val certificateS3BucketName: kotlin.String? = builder.certificateS3BucketName
    /**
     * The key of the Amazon S3 object ey where the certificate, certificate chain, and encrypted private key bundle
     * is stored. The object key is formated as follows:  role_arn/certificate_arn.
     */
    val certificateS3ObjectKey: kotlin.String? = builder.certificateS3ObjectKey
    /**
     * The ID of the KMS customer master key (CMK) used to encrypt the private key.
     */
    val encryptionKmsKeyId: kotlin.String? = builder.encryptionKmsKeyId

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.AssociatedRole = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("AssociatedRole(")
        append("associatedRoleArn=$associatedRoleArn,")
        append("certificateS3BucketName=$certificateS3BucketName,")
        append("certificateS3ObjectKey=$certificateS3ObjectKey,")
        append("encryptionKmsKeyId=$encryptionKmsKeyId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = associatedRoleArn?.hashCode() ?: 0
        result = 31 * result + (certificateS3BucketName?.hashCode() ?: 0)
        result = 31 * result + (certificateS3ObjectKey?.hashCode() ?: 0)
        result = 31 * result + (encryptionKmsKeyId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as AssociatedRole

        if (associatedRoleArn != other.associatedRoleArn) return false
        if (certificateS3BucketName != other.certificateS3BucketName) return false
        if (certificateS3ObjectKey != other.certificateS3ObjectKey) return false
        if (encryptionKmsKeyId != other.encryptionKmsKeyId) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.AssociatedRole = Builder(this).apply(block).build()

    class Builder {
        /**
         * The ARN of the associated IAM role.
         */
        var associatedRoleArn: kotlin.String? = null
        /**
         * The name of the Amazon S3 bucket in which the Amazon S3 object is stored.
         */
        var certificateS3BucketName: kotlin.String? = null
        /**
         * The key of the Amazon S3 object ey where the certificate, certificate chain, and encrypted private key bundle
         * is stored. The object key is formated as follows:  role_arn/certificate_arn.
         */
        var certificateS3ObjectKey: kotlin.String? = null
        /**
         * The ID of the KMS customer master key (CMK) used to encrypt the private key.
         */
        var encryptionKmsKeyId: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.AssociatedRole) : this() {
            this.associatedRoleArn = x.associatedRoleArn
            this.certificateS3BucketName = x.certificateS3BucketName
            this.certificateS3ObjectKey = x.certificateS3ObjectKey
            this.encryptionKmsKeyId = x.encryptionKmsKeyId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.AssociatedRole = AssociatedRole(this)
    }
}
