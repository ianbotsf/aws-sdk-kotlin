// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class DeleteNetworkAclEntryRequest private constructor(builder: Builder) {
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * Indicates whether the rule is an egress rule.
     */
    val egress: kotlin.Boolean? = builder.egress
    /**
     * The ID of the network ACL.
     */
    val networkAclId: kotlin.String? = builder.networkAclId
    /**
     * The rule number of the entry to delete.
     */
    val ruleNumber: kotlin.Int? = builder.ruleNumber

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.DeleteNetworkAclEntryRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("DeleteNetworkAclEntryRequest(")
        append("dryRun=$dryRun,")
        append("egress=$egress,")
        append("networkAclId=$networkAclId,")
        append("ruleNumber=$ruleNumber)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dryRun?.hashCode() ?: 0
        result = 31 * result + (egress?.hashCode() ?: 0)
        result = 31 * result + (networkAclId?.hashCode() ?: 0)
        result = 31 * result + (ruleNumber ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as DeleteNetworkAclEntryRequest

        if (dryRun != other.dryRun) return false
        if (egress != other.egress) return false
        if (networkAclId != other.networkAclId) return false
        if (ruleNumber != other.ruleNumber) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.DeleteNetworkAclEntryRequest = Builder(this).apply(block).build()

    class Builder {
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: kotlin.Boolean? = null
        /**
         * Indicates whether the rule is an egress rule.
         */
        var egress: kotlin.Boolean? = null
        /**
         * The ID of the network ACL.
         */
        var networkAclId: kotlin.String? = null
        /**
         * The rule number of the entry to delete.
         */
        var ruleNumber: kotlin.Int? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.DeleteNetworkAclEntryRequest) : this() {
            this.dryRun = x.dryRun
            this.egress = x.egress
            this.networkAclId = x.networkAclId
            this.ruleNumber = x.ruleNumber
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.DeleteNetworkAclEntryRequest = DeleteNetworkAclEntryRequest(this)
    }
}
