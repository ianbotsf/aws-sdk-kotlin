// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ImportImageResponse private constructor(builder: Builder) {
    /**
     * The architecture of the virtual machine.
     */
    val architecture: kotlin.String? = builder.architecture
    /**
     * A description of the import task.
     */
    val description: kotlin.String? = builder.description
    /**
     * Indicates whether the AMI is encrypted.
     */
    val encrypted: kotlin.Boolean? = builder.encrypted
    /**
     * The target hypervisor of the import task.
     */
    val hypervisor: kotlin.String? = builder.hypervisor
    /**
     * The ID of the Amazon Machine Image (AMI) created by the import task.
     */
    val imageId: kotlin.String? = builder.imageId
    /**
     * The task ID of the import image task.
     */
    val importTaskId: kotlin.String? = builder.importTaskId
    /**
     * The identifier for the symmetric KMS key that was used to create the encrypted AMI.
     */
    val kmsKeyId: kotlin.String? = builder.kmsKeyId
    /**
     * The ARNs of the license configurations.
     */
    val licenseSpecifications: List<ImportImageLicenseConfigurationResponse>? = builder.licenseSpecifications
    /**
     * The license type of the virtual machine.
     */
    val licenseType: kotlin.String? = builder.licenseType
    /**
     * The operating system of the virtual machine.
     */
    val platform: kotlin.String? = builder.platform
    /**
     * The progress of the task.
     */
    val progress: kotlin.String? = builder.progress
    /**
     * Information about the snapshots.
     */
    val snapshotDetails: List<SnapshotDetail>? = builder.snapshotDetails
    /**
     * A brief status of the task.
     */
    val status: kotlin.String? = builder.status
    /**
     * A detailed status message of the import task.
     */
    val statusMessage: kotlin.String? = builder.statusMessage
    /**
     * Any tags assigned to the import image task.
     */
    val tags: List<Tag>? = builder.tags
    /**
     * The usage operation value.
     */
    val usageOperation: kotlin.String? = builder.usageOperation

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ImportImageResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ImportImageResponse(")
        append("architecture=$architecture,")
        append("description=$description,")
        append("encrypted=$encrypted,")
        append("hypervisor=$hypervisor,")
        append("imageId=$imageId,")
        append("importTaskId=$importTaskId,")
        append("kmsKeyId=$kmsKeyId,")
        append("licenseSpecifications=$licenseSpecifications,")
        append("licenseType=$licenseType,")
        append("platform=$platform,")
        append("progress=$progress,")
        append("snapshotDetails=$snapshotDetails,")
        append("status=$status,")
        append("statusMessage=$statusMessage,")
        append("tags=$tags,")
        append("usageOperation=$usageOperation)")
    }

    override fun hashCode(): kotlin.Int {
        var result = architecture?.hashCode() ?: 0
        result = 31 * result + (description?.hashCode() ?: 0)
        result = 31 * result + (encrypted?.hashCode() ?: 0)
        result = 31 * result + (hypervisor?.hashCode() ?: 0)
        result = 31 * result + (imageId?.hashCode() ?: 0)
        result = 31 * result + (importTaskId?.hashCode() ?: 0)
        result = 31 * result + (kmsKeyId?.hashCode() ?: 0)
        result = 31 * result + (licenseSpecifications?.hashCode() ?: 0)
        result = 31 * result + (licenseType?.hashCode() ?: 0)
        result = 31 * result + (platform?.hashCode() ?: 0)
        result = 31 * result + (progress?.hashCode() ?: 0)
        result = 31 * result + (snapshotDetails?.hashCode() ?: 0)
        result = 31 * result + (status?.hashCode() ?: 0)
        result = 31 * result + (statusMessage?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        result = 31 * result + (usageOperation?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ImportImageResponse

        if (architecture != other.architecture) return false
        if (description != other.description) return false
        if (encrypted != other.encrypted) return false
        if (hypervisor != other.hypervisor) return false
        if (imageId != other.imageId) return false
        if (importTaskId != other.importTaskId) return false
        if (kmsKeyId != other.kmsKeyId) return false
        if (licenseSpecifications != other.licenseSpecifications) return false
        if (licenseType != other.licenseType) return false
        if (platform != other.platform) return false
        if (progress != other.progress) return false
        if (snapshotDetails != other.snapshotDetails) return false
        if (status != other.status) return false
        if (statusMessage != other.statusMessage) return false
        if (tags != other.tags) return false
        if (usageOperation != other.usageOperation) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ImportImageResponse = Builder(this).apply(block).build()

    class Builder {
        /**
         * The architecture of the virtual machine.
         */
        var architecture: kotlin.String? = null
        /**
         * A description of the import task.
         */
        var description: kotlin.String? = null
        /**
         * Indicates whether the AMI is encrypted.
         */
        var encrypted: kotlin.Boolean? = null
        /**
         * The target hypervisor of the import task.
         */
        var hypervisor: kotlin.String? = null
        /**
         * The ID of the Amazon Machine Image (AMI) created by the import task.
         */
        var imageId: kotlin.String? = null
        /**
         * The task ID of the import image task.
         */
        var importTaskId: kotlin.String? = null
        /**
         * The identifier for the symmetric KMS key that was used to create the encrypted AMI.
         */
        var kmsKeyId: kotlin.String? = null
        /**
         * The ARNs of the license configurations.
         */
        var licenseSpecifications: List<ImportImageLicenseConfigurationResponse>? = null
        /**
         * The license type of the virtual machine.
         */
        var licenseType: kotlin.String? = null
        /**
         * The operating system of the virtual machine.
         */
        var platform: kotlin.String? = null
        /**
         * The progress of the task.
         */
        var progress: kotlin.String? = null
        /**
         * Information about the snapshots.
         */
        var snapshotDetails: List<SnapshotDetail>? = null
        /**
         * A brief status of the task.
         */
        var status: kotlin.String? = null
        /**
         * A detailed status message of the import task.
         */
        var statusMessage: kotlin.String? = null
        /**
         * Any tags assigned to the import image task.
         */
        var tags: List<Tag>? = null
        /**
         * The usage operation value.
         */
        var usageOperation: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ImportImageResponse) : this() {
            this.architecture = x.architecture
            this.description = x.description
            this.encrypted = x.encrypted
            this.hypervisor = x.hypervisor
            this.imageId = x.imageId
            this.importTaskId = x.importTaskId
            this.kmsKeyId = x.kmsKeyId
            this.licenseSpecifications = x.licenseSpecifications
            this.licenseType = x.licenseType
            this.platform = x.platform
            this.progress = x.progress
            this.snapshotDetails = x.snapshotDetails
            this.status = x.status
            this.statusMessage = x.statusMessage
            this.tags = x.tags
            this.usageOperation = x.usageOperation
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ImportImageResponse = ImportImageResponse(this)
    }
}
