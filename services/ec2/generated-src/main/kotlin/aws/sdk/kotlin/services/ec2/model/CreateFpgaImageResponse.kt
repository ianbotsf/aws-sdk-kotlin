// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateFpgaImageResponse private constructor(builder: Builder) {
    /**
     * The global FPGA image identifier (AGFI ID).
     */
    val fpgaImageGlobalId: kotlin.String? = builder.fpgaImageGlobalId
    /**
     * The FPGA image identifier (AFI ID).
     */
    val fpgaImageId: kotlin.String? = builder.fpgaImageId

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateFpgaImageResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateFpgaImageResponse(")
        append("fpgaImageGlobalId=$fpgaImageGlobalId,")
        append("fpgaImageId=$fpgaImageId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = fpgaImageGlobalId?.hashCode() ?: 0
        result = 31 * result + (fpgaImageId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateFpgaImageResponse

        if (fpgaImageGlobalId != other.fpgaImageGlobalId) return false
        if (fpgaImageId != other.fpgaImageId) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateFpgaImageResponse = Builder(this).apply(block).build()

    class Builder {
        /**
         * The global FPGA image identifier (AGFI ID).
         */
        var fpgaImageGlobalId: kotlin.String? = null
        /**
         * The FPGA image identifier (AFI ID).
         */
        var fpgaImageId: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateFpgaImageResponse) : this() {
            this.fpgaImageGlobalId = x.fpgaImageGlobalId
            this.fpgaImageId = x.fpgaImageId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateFpgaImageResponse = CreateFpgaImageResponse(this)
    }
}
