// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the monitoring for the instance.
 */
class LaunchTemplatesMonitoring private constructor(builder: Builder) {
    /**
     * Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is
     * enabled.
     */
    val enabled: kotlin.Boolean? = builder.enabled

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.LaunchTemplatesMonitoring = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("LaunchTemplatesMonitoring(")
        append("enabled=$enabled)")
    }

    override fun hashCode(): kotlin.Int {
        var result = enabled?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as LaunchTemplatesMonitoring

        if (enabled != other.enabled) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.LaunchTemplatesMonitoring = Builder(this).apply(block).build()

    class Builder {
        /**
         * Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is
         * enabled.
         */
        var enabled: kotlin.Boolean? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.LaunchTemplatesMonitoring) : this() {
            this.enabled = x.enabled
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.LaunchTemplatesMonitoring = LaunchTemplatesMonitoring(this)
    }
}
