// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

class CreateCapacityReservationFleetResponse private constructor(builder: Builder) {
    /**
     * The allocation strategy used by the Capacity Reservation Fleet.
     */
    val allocationStrategy: kotlin.String? = builder.allocationStrategy
    /**
     * The ID of the Capacity Reservation Fleet.
     */
    val capacityReservationFleetId: kotlin.String? = builder.capacityReservationFleetId
    /**
     * The date and time at which the Capacity Reservation Fleet was created.
     */
    val createTime: aws.smithy.kotlin.runtime.time.Instant? = builder.createTime
    /**
     * The date and time at which the Capacity Reservation Fleet expires.
     */
    val endDate: aws.smithy.kotlin.runtime.time.Instant? = builder.endDate
    /**
     * Information about the individual Capacity Reservations in the Capacity Reservation Fleet.
     */
    val fleetCapacityReservations: List<FleetCapacityReservation>? = builder.fleetCapacityReservations
    /**
     * The instance matching criteria for the Capacity Reservation Fleet.
     */
    val instanceMatchCriteria: aws.sdk.kotlin.services.ec2.model.FleetInstanceMatchCriteria? = builder.instanceMatchCriteria
    /**
     * The status of the Capacity Reservation Fleet.
     */
    val state: aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetState? = builder.state
    /**
     * The tags assigned to the Capacity Reservation Fleet.
     */
    val tags: List<Tag>? = builder.tags
    /**
     * Indicates the tenancy of Capacity Reservation Fleet.
     */
    val tenancy: aws.sdk.kotlin.services.ec2.model.FleetCapacityReservationTenancy? = builder.tenancy
    /**
     * The requested capacity units that have been successfully reserved.
     */
    val totalFulfilledCapacity: kotlin.Double? = builder.totalFulfilledCapacity
    /**
     * The total number of capacity units for which the Capacity Reservation Fleet reserves capacity.
     */
    val totalTargetCapacity: kotlin.Int? = builder.totalTargetCapacity

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateCapacityReservationFleetResponse = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateCapacityReservationFleetResponse(")
        append("allocationStrategy=$allocationStrategy,")
        append("capacityReservationFleetId=$capacityReservationFleetId,")
        append("createTime=$createTime,")
        append("endDate=$endDate,")
        append("fleetCapacityReservations=$fleetCapacityReservations,")
        append("instanceMatchCriteria=$instanceMatchCriteria,")
        append("state=$state,")
        append("tags=$tags,")
        append("tenancy=$tenancy,")
        append("totalFulfilledCapacity=$totalFulfilledCapacity,")
        append("totalTargetCapacity=$totalTargetCapacity)")
    }

    override fun hashCode(): kotlin.Int {
        var result = allocationStrategy?.hashCode() ?: 0
        result = 31 * result + (capacityReservationFleetId?.hashCode() ?: 0)
        result = 31 * result + (createTime?.hashCode() ?: 0)
        result = 31 * result + (endDate?.hashCode() ?: 0)
        result = 31 * result + (fleetCapacityReservations?.hashCode() ?: 0)
        result = 31 * result + (instanceMatchCriteria?.hashCode() ?: 0)
        result = 31 * result + (state?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        result = 31 * result + (tenancy?.hashCode() ?: 0)
        result = 31 * result + (totalFulfilledCapacity?.hashCode() ?: 0)
        result = 31 * result + (totalTargetCapacity ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateCapacityReservationFleetResponse

        if (allocationStrategy != other.allocationStrategy) return false
        if (capacityReservationFleetId != other.capacityReservationFleetId) return false
        if (createTime != other.createTime) return false
        if (endDate != other.endDate) return false
        if (fleetCapacityReservations != other.fleetCapacityReservations) return false
        if (instanceMatchCriteria != other.instanceMatchCriteria) return false
        if (state != other.state) return false
        if (tags != other.tags) return false
        if (tenancy != other.tenancy) return false
        if (totalFulfilledCapacity != other.totalFulfilledCapacity) return false
        if (totalTargetCapacity != other.totalTargetCapacity) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateCapacityReservationFleetResponse = Builder(this).apply(block).build()

    class Builder {
        /**
         * The allocation strategy used by the Capacity Reservation Fleet.
         */
        var allocationStrategy: kotlin.String? = null
        /**
         * The ID of the Capacity Reservation Fleet.
         */
        var capacityReservationFleetId: kotlin.String? = null
        /**
         * The date and time at which the Capacity Reservation Fleet was created.
         */
        var createTime: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The date and time at which the Capacity Reservation Fleet expires.
         */
        var endDate: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * Information about the individual Capacity Reservations in the Capacity Reservation Fleet.
         */
        var fleetCapacityReservations: List<FleetCapacityReservation>? = null
        /**
         * The instance matching criteria for the Capacity Reservation Fleet.
         */
        var instanceMatchCriteria: aws.sdk.kotlin.services.ec2.model.FleetInstanceMatchCriteria? = null
        /**
         * The status of the Capacity Reservation Fleet.
         */
        var state: aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetState? = null
        /**
         * The tags assigned to the Capacity Reservation Fleet.
         */
        var tags: List<Tag>? = null
        /**
         * Indicates the tenancy of Capacity Reservation Fleet.
         */
        var tenancy: aws.sdk.kotlin.services.ec2.model.FleetCapacityReservationTenancy? = null
        /**
         * The requested capacity units that have been successfully reserved.
         */
        var totalFulfilledCapacity: kotlin.Double? = null
        /**
         * The total number of capacity units for which the Capacity Reservation Fleet reserves capacity.
         */
        var totalTargetCapacity: kotlin.Int? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateCapacityReservationFleetResponse) : this() {
            this.allocationStrategy = x.allocationStrategy
            this.capacityReservationFleetId = x.capacityReservationFleetId
            this.createTime = x.createTime
            this.endDate = x.endDate
            this.fleetCapacityReservations = x.fleetCapacityReservations
            this.instanceMatchCriteria = x.instanceMatchCriteria
            this.state = x.state
            this.tags = x.tags
            this.tenancy = x.tenancy
            this.totalFulfilledCapacity = x.totalFulfilledCapacity
            this.totalTargetCapacity = x.totalTargetCapacity
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateCapacityReservationFleetResponse = CreateCapacityReservationFleetResponse(this)
    }
}
