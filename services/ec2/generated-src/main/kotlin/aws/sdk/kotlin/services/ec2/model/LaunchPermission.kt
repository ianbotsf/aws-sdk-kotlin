// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a launch permission.
 */
class LaunchPermission private constructor(builder: Builder) {
    /**
     * The name of the group.
     */
    val group: aws.sdk.kotlin.services.ec2.model.PermissionGroup? = builder.group
    /**
     * The Amazon Resource Name (ARN) of an organization.
     */
    val organizationArn: kotlin.String? = builder.organizationArn
    /**
     * The Amazon Resource Name (ARN) of an organizational unit (OU).
     */
    val organizationalUnitArn: kotlin.String? = builder.organizationalUnitArn
    /**
     * The Amazon Web Services account ID.
     * Constraints: Up to 10 000 account IDs can be specified in a single request.
     */
    val userId: kotlin.String? = builder.userId

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.LaunchPermission = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("LaunchPermission(")
        append("group=$group,")
        append("organizationArn=$organizationArn,")
        append("organizationalUnitArn=$organizationalUnitArn,")
        append("userId=$userId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = group?.hashCode() ?: 0
        result = 31 * result + (organizationArn?.hashCode() ?: 0)
        result = 31 * result + (organizationalUnitArn?.hashCode() ?: 0)
        result = 31 * result + (userId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as LaunchPermission

        if (group != other.group) return false
        if (organizationArn != other.organizationArn) return false
        if (organizationalUnitArn != other.organizationalUnitArn) return false
        if (userId != other.userId) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.LaunchPermission = Builder(this).apply(block).build()

    class Builder {
        /**
         * The name of the group.
         */
        var group: aws.sdk.kotlin.services.ec2.model.PermissionGroup? = null
        /**
         * The Amazon Resource Name (ARN) of an organization.
         */
        var organizationArn: kotlin.String? = null
        /**
         * The Amazon Resource Name (ARN) of an organizational unit (OU).
         */
        var organizationalUnitArn: kotlin.String? = null
        /**
         * The Amazon Web Services account ID.
         * Constraints: Up to 10 000 account IDs can be specified in a single request.
         */
        var userId: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.LaunchPermission) : this() {
            this.group = x.group
            this.organizationArn = x.organizationArn
            this.organizationalUnitArn = x.organizationalUnitArn
            this.userId = x.userId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.LaunchPermission = LaunchPermission(this)
    }
}
