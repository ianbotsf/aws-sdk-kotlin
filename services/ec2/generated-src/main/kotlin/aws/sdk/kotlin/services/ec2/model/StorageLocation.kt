// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a storage location in Amazon S3.
 */
class StorageLocation private constructor(builder: Builder) {
    /**
     * The name of the S3 bucket.
     */
    val bucket: kotlin.String? = builder.bucket
    /**
     * The key.
     */
    val key: kotlin.String? = builder.key

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.StorageLocation = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("StorageLocation(")
        append("bucket=$bucket,")
        append("key=$key)")
    }

    override fun hashCode(): kotlin.Int {
        var result = bucket?.hashCode() ?: 0
        result = 31 * result + (key?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as StorageLocation

        if (bucket != other.bucket) return false
        if (key != other.key) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.StorageLocation = Builder(this).apply(block).build()

    class Builder {
        /**
         * The name of the S3 bucket.
         */
        var bucket: kotlin.String? = null
        /**
         * The key.
         */
        var key: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.StorageLocation) : this() {
            this.bucket = x.bucket
            this.key = x.key
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.StorageLocation = StorageLocation(this)
    }
}
