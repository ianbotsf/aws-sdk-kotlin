// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes a Capacity Reservation Fleet that was successfully cancelled.
 */
class CapacityReservationFleetCancellationState private constructor(builder: Builder) {
    /**
     * The ID of the Capacity Reservation Fleet that was successfully cancelled.
     */
    val capacityReservationFleetId: kotlin.String? = builder.capacityReservationFleetId
    /**
     * The current state of the Capacity Reservation Fleet.
     */
    val currentFleetState: aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetState? = builder.currentFleetState
    /**
     * The previous state of the Capacity Reservation Fleet.
     */
    val previousFleetState: aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetState? = builder.previousFleetState

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetCancellationState = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CapacityReservationFleetCancellationState(")
        append("capacityReservationFleetId=$capacityReservationFleetId,")
        append("currentFleetState=$currentFleetState,")
        append("previousFleetState=$previousFleetState)")
    }

    override fun hashCode(): kotlin.Int {
        var result = capacityReservationFleetId?.hashCode() ?: 0
        result = 31 * result + (currentFleetState?.hashCode() ?: 0)
        result = 31 * result + (previousFleetState?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CapacityReservationFleetCancellationState

        if (capacityReservationFleetId != other.capacityReservationFleetId) return false
        if (currentFleetState != other.currentFleetState) return false
        if (previousFleetState != other.previousFleetState) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetCancellationState = Builder(this).apply(block).build()

    class Builder {
        /**
         * The ID of the Capacity Reservation Fleet that was successfully cancelled.
         */
        var capacityReservationFleetId: kotlin.String? = null
        /**
         * The current state of the Capacity Reservation Fleet.
         */
        var currentFleetState: aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetState? = null
        /**
         * The previous state of the Capacity Reservation Fleet.
         */
        var previousFleetState: aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetState? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetCancellationState) : this() {
            this.capacityReservationFleetId = x.capacityReservationFleetId
            this.currentFleetState = x.currentFleetState
            this.previousFleetState = x.previousFleetState
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CapacityReservationFleetCancellationState = CapacityReservationFleetCancellationState(this)
    }
}
