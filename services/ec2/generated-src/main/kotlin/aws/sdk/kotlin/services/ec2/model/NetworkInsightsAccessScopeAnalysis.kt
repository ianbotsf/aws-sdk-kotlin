// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model

import aws.smithy.kotlin.runtime.time.Instant

/**
 * Describes a Network Access Scope analysis.
 */
class NetworkInsightsAccessScopeAnalysis private constructor(builder: Builder) {
    /**
     * The number of network interfaces analyzed.
     */
    val analyzedEniCount: kotlin.Int? = builder.analyzedEniCount
    /**
     * The analysis end date.
     */
    val endDate: aws.smithy.kotlin.runtime.time.Instant? = builder.endDate
    /**
     * Indicates whether there are findings.
     */
    val findingsFound: aws.sdk.kotlin.services.ec2.model.FindingsFound? = builder.findingsFound
    /**
     * The Amazon Resource Name (ARN) of the Network Access Scope analysis.
     */
    val networkInsightsAccessScopeAnalysisArn: kotlin.String? = builder.networkInsightsAccessScopeAnalysisArn
    /**
     * The ID of the Network Access Scope analysis.
     */
    val networkInsightsAccessScopeAnalysisId: kotlin.String? = builder.networkInsightsAccessScopeAnalysisId
    /**
     * The ID of the Network Access Scope.
     */
    val networkInsightsAccessScopeId: kotlin.String? = builder.networkInsightsAccessScopeId
    /**
     * The analysis start date.
     */
    val startDate: aws.smithy.kotlin.runtime.time.Instant? = builder.startDate
    /**
     * The status.
     */
    val status: aws.sdk.kotlin.services.ec2.model.AnalysisStatus? = builder.status
    /**
     * The status message.
     */
    val statusMessage: kotlin.String? = builder.statusMessage
    /**
     * The tags.
     */
    val tags: List<Tag>? = builder.tags
    /**
     * The warning message.
     */
    val warningMessage: kotlin.String? = builder.warningMessage

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.NetworkInsightsAccessScopeAnalysis = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("NetworkInsightsAccessScopeAnalysis(")
        append("analyzedEniCount=$analyzedEniCount,")
        append("endDate=$endDate,")
        append("findingsFound=$findingsFound,")
        append("networkInsightsAccessScopeAnalysisArn=$networkInsightsAccessScopeAnalysisArn,")
        append("networkInsightsAccessScopeAnalysisId=$networkInsightsAccessScopeAnalysisId,")
        append("networkInsightsAccessScopeId=$networkInsightsAccessScopeId,")
        append("startDate=$startDate,")
        append("status=$status,")
        append("statusMessage=$statusMessage,")
        append("tags=$tags,")
        append("warningMessage=$warningMessage)")
    }

    override fun hashCode(): kotlin.Int {
        var result = analyzedEniCount ?: 0
        result = 31 * result + (endDate?.hashCode() ?: 0)
        result = 31 * result + (findingsFound?.hashCode() ?: 0)
        result = 31 * result + (networkInsightsAccessScopeAnalysisArn?.hashCode() ?: 0)
        result = 31 * result + (networkInsightsAccessScopeAnalysisId?.hashCode() ?: 0)
        result = 31 * result + (networkInsightsAccessScopeId?.hashCode() ?: 0)
        result = 31 * result + (startDate?.hashCode() ?: 0)
        result = 31 * result + (status?.hashCode() ?: 0)
        result = 31 * result + (statusMessage?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        result = 31 * result + (warningMessage?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as NetworkInsightsAccessScopeAnalysis

        if (analyzedEniCount != other.analyzedEniCount) return false
        if (endDate != other.endDate) return false
        if (findingsFound != other.findingsFound) return false
        if (networkInsightsAccessScopeAnalysisArn != other.networkInsightsAccessScopeAnalysisArn) return false
        if (networkInsightsAccessScopeAnalysisId != other.networkInsightsAccessScopeAnalysisId) return false
        if (networkInsightsAccessScopeId != other.networkInsightsAccessScopeId) return false
        if (startDate != other.startDate) return false
        if (status != other.status) return false
        if (statusMessage != other.statusMessage) return false
        if (tags != other.tags) return false
        if (warningMessage != other.warningMessage) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.NetworkInsightsAccessScopeAnalysis = Builder(this).apply(block).build()

    class Builder {
        /**
         * The number of network interfaces analyzed.
         */
        var analyzedEniCount: kotlin.Int? = null
        /**
         * The analysis end date.
         */
        var endDate: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * Indicates whether there are findings.
         */
        var findingsFound: aws.sdk.kotlin.services.ec2.model.FindingsFound? = null
        /**
         * The Amazon Resource Name (ARN) of the Network Access Scope analysis.
         */
        var networkInsightsAccessScopeAnalysisArn: kotlin.String? = null
        /**
         * The ID of the Network Access Scope analysis.
         */
        var networkInsightsAccessScopeAnalysisId: kotlin.String? = null
        /**
         * The ID of the Network Access Scope.
         */
        var networkInsightsAccessScopeId: kotlin.String? = null
        /**
         * The analysis start date.
         */
        var startDate: aws.smithy.kotlin.runtime.time.Instant? = null
        /**
         * The status.
         */
        var status: aws.sdk.kotlin.services.ec2.model.AnalysisStatus? = null
        /**
         * The status message.
         */
        var statusMessage: kotlin.String? = null
        /**
         * The tags.
         */
        var tags: List<Tag>? = null
        /**
         * The warning message.
         */
        var warningMessage: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.NetworkInsightsAccessScopeAnalysis) : this() {
            this.analyzedEniCount = x.analyzedEniCount
            this.endDate = x.endDate
            this.findingsFound = x.findingsFound
            this.networkInsightsAccessScopeAnalysisArn = x.networkInsightsAccessScopeAnalysisArn
            this.networkInsightsAccessScopeAnalysisId = x.networkInsightsAccessScopeAnalysisId
            this.networkInsightsAccessScopeId = x.networkInsightsAccessScopeId
            this.startDate = x.startDate
            this.status = x.status
            this.statusMessage = x.statusMessage
            this.tags = x.tags
            this.warningMessage = x.warningMessage
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.NetworkInsightsAccessScopeAnalysis = NetworkInsightsAccessScopeAnalysis(this)
    }
}
