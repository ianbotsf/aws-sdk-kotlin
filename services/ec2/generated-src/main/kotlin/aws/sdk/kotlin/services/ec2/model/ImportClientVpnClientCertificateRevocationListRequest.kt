// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class ImportClientVpnClientCertificateRevocationListRequest private constructor(builder: Builder) {
    /**
     * The client certificate revocation list file. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-certificates.html#cvpn-working-certificates-generate">Generate a Client Certificate Revocation List in the
     * Client VPN Administrator Guide.
     */
    val certificateRevocationList: kotlin.String? = builder.certificateRevocationList
    /**
     * The ID of the Client VPN endpoint to which the client certificate revocation list applies.
     */
    val clientVpnEndpointId: kotlin.String? = builder.clientVpnEndpointId
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: kotlin.Boolean? = builder.dryRun

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.ImportClientVpnClientCertificateRevocationListRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ImportClientVpnClientCertificateRevocationListRequest(")
        append("certificateRevocationList=$certificateRevocationList,")
        append("clientVpnEndpointId=$clientVpnEndpointId,")
        append("dryRun=$dryRun)")
    }

    override fun hashCode(): kotlin.Int {
        var result = certificateRevocationList?.hashCode() ?: 0
        result = 31 * result + (clientVpnEndpointId?.hashCode() ?: 0)
        result = 31 * result + (dryRun?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ImportClientVpnClientCertificateRevocationListRequest

        if (certificateRevocationList != other.certificateRevocationList) return false
        if (clientVpnEndpointId != other.clientVpnEndpointId) return false
        if (dryRun != other.dryRun) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.ImportClientVpnClientCertificateRevocationListRequest = Builder(this).apply(block).build()

    class Builder {
        /**
         * The client certificate revocation list file. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-certificates.html#cvpn-working-certificates-generate">Generate a Client Certificate Revocation List in the
         * Client VPN Administrator Guide.
         */
        var certificateRevocationList: kotlin.String? = null
        /**
         * The ID of the Client VPN endpoint to which the client certificate revocation list applies.
         */
        var clientVpnEndpointId: kotlin.String? = null
        /**
         * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: kotlin.Boolean? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.ImportClientVpnClientCertificateRevocationListRequest) : this() {
            this.certificateRevocationList = x.certificateRevocationList
            this.clientVpnEndpointId = x.clientVpnEndpointId
            this.dryRun = x.dryRun
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.ImportClientVpnClientCertificateRevocationListRequest = ImportClientVpnClientCertificateRevocationListRequest(this)
    }
}
