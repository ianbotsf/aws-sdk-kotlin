// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an instance state change.
 */
class InstanceStateChange private constructor(builder: Builder) {
    /**
     * The current state of the instance.
     */
    val currentState: aws.sdk.kotlin.services.ec2.model.InstanceState? = builder.currentState
    /**
     * The ID of the instance.
     */
    val instanceId: kotlin.String? = builder.instanceId
    /**
     * The previous state of the instance.
     */
    val previousState: aws.sdk.kotlin.services.ec2.model.InstanceState? = builder.previousState

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.InstanceStateChange = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("InstanceStateChange(")
        append("currentState=$currentState,")
        append("instanceId=$instanceId,")
        append("previousState=$previousState)")
    }

    override fun hashCode(): kotlin.Int {
        var result = currentState?.hashCode() ?: 0
        result = 31 * result + (instanceId?.hashCode() ?: 0)
        result = 31 * result + (previousState?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as InstanceStateChange

        if (currentState != other.currentState) return false
        if (instanceId != other.instanceId) return false
        if (previousState != other.previousState) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.InstanceStateChange = Builder(this).apply(block).build()

    class Builder {
        /**
         * The current state of the instance.
         */
        var currentState: aws.sdk.kotlin.services.ec2.model.InstanceState? = null
        /**
         * The ID of the instance.
         */
        var instanceId: kotlin.String? = null
        /**
         * The previous state of the instance.
         */
        var previousState: aws.sdk.kotlin.services.ec2.model.InstanceState? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.InstanceStateChange) : this() {
            this.currentState = x.currentState
            this.instanceId = x.instanceId
            this.previousState = x.previousState
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.InstanceStateChange = InstanceStateChange(this)

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.InstanceState] inside the given [block]
         */
        fun currentState(block: aws.sdk.kotlin.services.ec2.model.InstanceState.Builder.() -> kotlin.Unit) {
            this.currentState = aws.sdk.kotlin.services.ec2.model.InstanceState.invoke(block)
        }

        /**
         * construct an [aws.sdk.kotlin.services.ec2.model.InstanceState] inside the given [block]
         */
        fun previousState(block: aws.sdk.kotlin.services.ec2.model.InstanceState.Builder.() -> kotlin.Unit) {
            this.previousState = aws.sdk.kotlin.services.ec2.model.InstanceState.invoke(block)
        }
    }
}
