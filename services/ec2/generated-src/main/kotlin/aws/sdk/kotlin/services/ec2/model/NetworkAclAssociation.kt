// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes an association between a network ACL and a subnet.
 */
class NetworkAclAssociation private constructor(builder: Builder) {
    /**
     * The ID of the association between a network ACL and a subnet.
     */
    val networkAclAssociationId: kotlin.String? = builder.networkAclAssociationId
    /**
     * The ID of the network ACL.
     */
    val networkAclId: kotlin.String? = builder.networkAclId
    /**
     * The ID of the subnet.
     */
    val subnetId: kotlin.String? = builder.subnetId

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.NetworkAclAssociation = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("NetworkAclAssociation(")
        append("networkAclAssociationId=$networkAclAssociationId,")
        append("networkAclId=$networkAclId,")
        append("subnetId=$subnetId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = networkAclAssociationId?.hashCode() ?: 0
        result = 31 * result + (networkAclId?.hashCode() ?: 0)
        result = 31 * result + (subnetId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as NetworkAclAssociation

        if (networkAclAssociationId != other.networkAclAssociationId) return false
        if (networkAclId != other.networkAclId) return false
        if (subnetId != other.subnetId) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.NetworkAclAssociation = Builder(this).apply(block).build()

    class Builder {
        /**
         * The ID of the association between a network ACL and a subnet.
         */
        var networkAclAssociationId: kotlin.String? = null
        /**
         * The ID of the network ACL.
         */
        var networkAclId: kotlin.String? = null
        /**
         * The ID of the subnet.
         */
        var subnetId: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.NetworkAclAssociation) : this() {
            this.networkAclAssociationId = x.networkAclAssociationId
            this.networkAclId = x.networkAclId
            this.subnetId = x.subnetId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.NetworkAclAssociation = NetworkAclAssociation(this)
    }
}
