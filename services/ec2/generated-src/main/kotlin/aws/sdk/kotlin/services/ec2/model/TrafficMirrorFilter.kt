// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the Traffic Mirror filter.
 */
class TrafficMirrorFilter private constructor(builder: Builder) {
    /**
     * The description of the Traffic Mirror filter.
     */
    val description: kotlin.String? = builder.description
    /**
     * Information about the egress rules that are associated with the Traffic Mirror filter.
     */
    val egressFilterRules: List<TrafficMirrorFilterRule>? = builder.egressFilterRules
    /**
     * Information about the ingress rules that are associated with the Traffic Mirror filter.
     */
    val ingressFilterRules: List<TrafficMirrorFilterRule>? = builder.ingressFilterRules
    /**
     * The network service traffic that is associated with the Traffic Mirror filter.
     */
    val networkServices: List<TrafficMirrorNetworkService>? = builder.networkServices
    /**
     * The tags assigned to the Traffic Mirror filter.
     */
    val tags: List<Tag>? = builder.tags
    /**
     * The ID of the Traffic Mirror filter.
     */
    val trafficMirrorFilterId: kotlin.String? = builder.trafficMirrorFilterId

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.TrafficMirrorFilter = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("TrafficMirrorFilter(")
        append("description=$description,")
        append("egressFilterRules=$egressFilterRules,")
        append("ingressFilterRules=$ingressFilterRules,")
        append("networkServices=$networkServices,")
        append("tags=$tags,")
        append("trafficMirrorFilterId=$trafficMirrorFilterId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = description?.hashCode() ?: 0
        result = 31 * result + (egressFilterRules?.hashCode() ?: 0)
        result = 31 * result + (ingressFilterRules?.hashCode() ?: 0)
        result = 31 * result + (networkServices?.hashCode() ?: 0)
        result = 31 * result + (tags?.hashCode() ?: 0)
        result = 31 * result + (trafficMirrorFilterId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as TrafficMirrorFilter

        if (description != other.description) return false
        if (egressFilterRules != other.egressFilterRules) return false
        if (ingressFilterRules != other.ingressFilterRules) return false
        if (networkServices != other.networkServices) return false
        if (tags != other.tags) return false
        if (trafficMirrorFilterId != other.trafficMirrorFilterId) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.TrafficMirrorFilter = Builder(this).apply(block).build()

    class Builder {
        /**
         * The description of the Traffic Mirror filter.
         */
        var description: kotlin.String? = null
        /**
         * Information about the egress rules that are associated with the Traffic Mirror filter.
         */
        var egressFilterRules: List<TrafficMirrorFilterRule>? = null
        /**
         * Information about the ingress rules that are associated with the Traffic Mirror filter.
         */
        var ingressFilterRules: List<TrafficMirrorFilterRule>? = null
        /**
         * The network service traffic that is associated with the Traffic Mirror filter.
         */
        var networkServices: List<TrafficMirrorNetworkService>? = null
        /**
         * The tags assigned to the Traffic Mirror filter.
         */
        var tags: List<Tag>? = null
        /**
         * The ID of the Traffic Mirror filter.
         */
        var trafficMirrorFilterId: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.TrafficMirrorFilter) : this() {
            this.description = x.description
            this.egressFilterRules = x.egressFilterRules
            this.ingressFilterRules = x.ingressFilterRules
            this.networkServices = x.networkServices
            this.tags = x.tags
            this.trafficMirrorFilterId = x.trafficMirrorFilterId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.TrafficMirrorFilter = TrafficMirrorFilter(this)
    }
}
