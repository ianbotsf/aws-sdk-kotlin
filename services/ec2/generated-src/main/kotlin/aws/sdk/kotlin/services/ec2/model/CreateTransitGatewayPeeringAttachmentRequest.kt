// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



class CreateTransitGatewayPeeringAttachmentRequest private constructor(builder: Builder) {
    /**
     * Checks whether you have the required permissions for the action, without actually making the request,
     * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
     * Otherwise, it is UnauthorizedOperation.
     */
    val dryRun: kotlin.Boolean? = builder.dryRun
    /**
     * The ID of the Amazon Web Services account that owns the peer transit gateway.
     */
    val peerAccountId: kotlin.String? = builder.peerAccountId
    /**
     * The Region where the peer transit gateway is located.
     */
    val peerRegion: kotlin.String? = builder.peerRegion
    /**
     * The ID of the peer transit gateway with which to create the peering attachment.
     */
    val peerTransitGatewayId: kotlin.String? = builder.peerTransitGatewayId
    /**
     * The tags to apply to the transit gateway peering attachment.
     */
    val tagSpecifications: List<TagSpecification>? = builder.tagSpecifications
    /**
     * The ID of the transit gateway.
     */
    val transitGatewayId: kotlin.String? = builder.transitGatewayId

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.CreateTransitGatewayPeeringAttachmentRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("CreateTransitGatewayPeeringAttachmentRequest(")
        append("dryRun=$dryRun,")
        append("peerAccountId=$peerAccountId,")
        append("peerRegion=$peerRegion,")
        append("peerTransitGatewayId=$peerTransitGatewayId,")
        append("tagSpecifications=$tagSpecifications,")
        append("transitGatewayId=$transitGatewayId)")
    }

    override fun hashCode(): kotlin.Int {
        var result = dryRun?.hashCode() ?: 0
        result = 31 * result + (peerAccountId?.hashCode() ?: 0)
        result = 31 * result + (peerRegion?.hashCode() ?: 0)
        result = 31 * result + (peerTransitGatewayId?.hashCode() ?: 0)
        result = 31 * result + (tagSpecifications?.hashCode() ?: 0)
        result = 31 * result + (transitGatewayId?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as CreateTransitGatewayPeeringAttachmentRequest

        if (dryRun != other.dryRun) return false
        if (peerAccountId != other.peerAccountId) return false
        if (peerRegion != other.peerRegion) return false
        if (peerTransitGatewayId != other.peerTransitGatewayId) return false
        if (tagSpecifications != other.tagSpecifications) return false
        if (transitGatewayId != other.transitGatewayId) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.CreateTransitGatewayPeeringAttachmentRequest = Builder(this).apply(block).build()

    class Builder {
        /**
         * Checks whether you have the required permissions for the action, without actually making the request,
         * and provides an error response. If you have the required permissions, the error response is DryRunOperation.
         * Otherwise, it is UnauthorizedOperation.
         */
        var dryRun: kotlin.Boolean? = null
        /**
         * The ID of the Amazon Web Services account that owns the peer transit gateway.
         */
        var peerAccountId: kotlin.String? = null
        /**
         * The Region where the peer transit gateway is located.
         */
        var peerRegion: kotlin.String? = null
        /**
         * The ID of the peer transit gateway with which to create the peering attachment.
         */
        var peerTransitGatewayId: kotlin.String? = null
        /**
         * The tags to apply to the transit gateway peering attachment.
         */
        var tagSpecifications: List<TagSpecification>? = null
        /**
         * The ID of the transit gateway.
         */
        var transitGatewayId: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.CreateTransitGatewayPeeringAttachmentRequest) : this() {
            this.dryRun = x.dryRun
            this.peerAccountId = x.peerAccountId
            this.peerRegion = x.peerRegion
            this.peerTransitGatewayId = x.peerTransitGatewayId
            this.tagSpecifications = x.tagSpecifications
            this.transitGatewayId = x.transitGatewayId
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.CreateTransitGatewayPeeringAttachmentRequest = CreateTransitGatewayPeeringAttachmentRequest(this)
    }
}
