// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.ec2.model



/**
 * Describes the ICMP type and code.
 */
class IcmpTypeCode private constructor(builder: Builder) {
    /**
     * The ICMP code. A value of -1 means all codes for the specified ICMP type.
     */
    val code: kotlin.Int? = builder.code
    /**
     * The ICMP type. A value of -1 means all types.
     */
    val type: kotlin.Int? = builder.type

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.ec2.model.IcmpTypeCode = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("IcmpTypeCode(")
        append("code=$code,")
        append("type=$type)")
    }

    override fun hashCode(): kotlin.Int {
        var result = code ?: 0
        result = 31 * result + (type ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as IcmpTypeCode

        if (code != other.code) return false
        if (type != other.type) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.ec2.model.IcmpTypeCode = Builder(this).apply(block).build()

    class Builder {
        /**
         * The ICMP code. A value of -1 means all codes for the specified ICMP type.
         */
        var code: kotlin.Int? = null
        /**
         * The ICMP type. A value of -1 means all types.
         */
        var type: kotlin.Int? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.ec2.model.IcmpTypeCode) : this() {
            this.code = x.code
            this.type = x.type
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.ec2.model.IcmpTypeCode = IcmpTypeCode(this)
    }
}
