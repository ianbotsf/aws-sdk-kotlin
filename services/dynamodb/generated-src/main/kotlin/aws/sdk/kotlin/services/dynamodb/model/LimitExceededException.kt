// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package aws.sdk.kotlin.services.dynamodb.model

import aws.smithy.kotlin.runtime.ServiceErrorMetadata

/**
 * There is no limit to the number of daily on-demand backups that can be taken.
 * Up to 50 simultaneous table operations are allowed per account. These operations
 * include CreateTable, UpdateTable,
 * DeleteTable,UpdateTimeToLive,
 * RestoreTableFromBackup, and RestoreTableToPointInTime.
 * The only exception is when you are creating a table with one or more secondary
 * indexes. You can have up to 25 such requests running at a time; however, if the table or
 * index specifications are complex, DynamoDB might temporarily reduce the number
 * of concurrent operations.
 * There is a soft account quota of 256 tables.
 */
class LimitExceededException private constructor(builder: Builder) : DynamoDbException() {

    /**
     * Too many operations for a given subscriber.
     */
    override val message: kotlin.String? = builder.message

    init {
        sdkErrorMetadata.attributes[ServiceErrorMetadata.ErrorType] = ErrorType.Client
    }

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): aws.sdk.kotlin.services.dynamodb.model.LimitExceededException = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("LimitExceededException(")
        append("message=$message)")
    }

    override fun hashCode(): kotlin.Int {
        var result = message?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as LimitExceededException

        if (message != other.message) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): aws.sdk.kotlin.services.dynamodb.model.LimitExceededException = Builder(this).apply(block).build()

    class Builder {
        /**
         * Too many operations for a given subscriber.
         */
        var message: kotlin.String? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: aws.sdk.kotlin.services.dynamodb.model.LimitExceededException) : this() {
            this.message = x.message
        }

        @PublishedApi
        internal fun build(): aws.sdk.kotlin.services.dynamodb.model.LimitExceededException = LimitExceededException(this)
    }
}
